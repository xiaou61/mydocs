import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as a,c as s,e as p}from"./app.c5b3201b.js";const o={},t=p(`<p>快速开始一个业务的开发，是每一个程序员必备的技能。</p><p>如何进行快速的开发，市面上有着很多插件，良莠不齐，今天我来介绍一个自己一直在用的一个插件。<strong>easy code</strong>，如果你的项目只有crud的话，这个插件可以说是一个非常好用的存在</p><h2 id="easy-code" tabindex="-1"><a class="header-anchor" href="#easy-code" aria-hidden="true">#</a> easy code</h2><blockquote><p>EasyCode是基于IntelliJ IDEA Ultimate版开发的一个代码生成插件，主要通过自定义模板（基于velocity）来生成各种你想要的代码。通常用于生成Entity、Dao、Service、Controller。如果你动手能力强还可以用于生成HTML、JS、PHP等代码。理论上来说只要是与数据有关的代码都是可以生成的。</p></blockquote><p>这里我用的是idea来进行演示</p><p>首先要在插件商店上下载上easycode，这个就不多说了。</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308311712891.png" alt="image-20230831171233726" loading="lazy"></p><h2 id="easycode使用" tabindex="-1"><a class="header-anchor" href="#easycode使用" aria-hidden="true">#</a> easycode使用</h2><p>首先连接需要生成代码的数据库</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308311714281.png" alt="image-20230831171438193" loading="lazy"></p><p>选中要生成的表右键，一张或者多张都可以</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308311715957.png" alt="image-20230831171535910" loading="lazy"></p><p>在package里面配置要生成代码的路径<img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308311716925.png" alt="image-20230831171613882" loading="lazy"></p><p>之后下面的配置我一般都是这样选择的</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308311717271.png" alt="image-20230831171701215" loading="lazy"></p><p>可以根据自己需求来进行选择。</p><p>之后就发现关于这些的crud就已经出来了</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308311718737.png" alt="image-20230831171805686" loading="lazy"></p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308311717396.png" alt="image-20230831171739334" loading="lazy"></p><p>最后需要再启动类中修改一下代码，在启动类中添加mapperscan</p><p>将dao层目录进放入</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>easycode</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">MapperScan</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.example.easycode.dao&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EasycodeApplication</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">EasycodeApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后就可以了</p>`,23),c=[t];function e(i,l){return a(),s("div",null,c)}const r=n(o,[["render",e],["__file","24.html.vue"]]);export{r as default};
