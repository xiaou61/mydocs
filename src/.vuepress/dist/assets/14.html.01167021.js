import{_ as r}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as t,e as a}from"./app.c5b3201b.js";const n={},o=a('<h2 id="封装" tabindex="-1"><a class="header-anchor" href="#封装" aria-hidden="true">#</a> 封装</h2><p>封装最好理解，封装是面向对象的特征之一，是对象和类概念的主要特征，封装，也就是把<strong>客观事物封装成抽象的类</strong>，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的就行信息隐藏。</p><h2 id="继承" tabindex="-1"><a class="header-anchor" href="#继承" aria-hidden="true">#</a> 继承</h2><p>它可以使用现有类的所有功能，并在无需重新编写原来的类的情况下对这些功能进行扩展，通过继承创建的新类称为<strong>子类</strong>和<strong>派生类</strong>，被继承的类型为基类(父类或者超类)</p><h2 id="多态性" tabindex="-1"><a class="header-anchor" href="#多态性" aria-hidden="true">#</a> 多态性</h2><p>它是指在父类中定义的属性和方法被子类继承之后，可以具有不同的<strong>数据类型</strong>或表现出<strong>不同的行为，<strong>这使得同一个属性或者方法在父类及其</strong>各个子类中具有不同的含义</strong>。</p>',6),s=[o];function c(h,d){return e(),t("div",null,s)}const g=r(n,[["render",c],["__file","14.html.vue"]]);export{g as default};
