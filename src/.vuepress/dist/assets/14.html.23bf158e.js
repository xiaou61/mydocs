const e=JSON.parse('{"key":"v-5014f7e5","path":"/interview/day/8/14.html","title":"8.20- 讲讲面向对象三大特性","lang":"zh-CN","frontmatter":{"title":"8.20- 讲讲面向对象三大特性","icon":"community","category":["面试"],"tag":["面试"],"sticky":false,"star":true,"article":true,"timeline":true,"description":"封装 封装最好理解，封装是面向对象的特征之一，是对象和类概念的主要特征，封装，也就是把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的就行信息隐藏。 继承 它可以使用现有类的所有功能，并在无需重新编写原来的类的情况下对这些功能进行扩展，通过继承创建的新类称为子类和派生类，被继承的类型为基类(父类或者超类) 多态性...","head":[["meta",{"property":"og:url","content":"https://mydocs.guoyaxue.top/interview/day/8/14.html"}],["meta",{"property":"og:site_name","content":"小uの学习笔记"}],["meta",{"property":"og:title","content":"8.20- 讲讲面向对象三大特性"}],["meta",{"property":"og:description","content":"封装 封装最好理解，封装是面向对象的特征之一，是对象和类概念的主要特征，封装，也就是把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的就行信息隐藏。 继承 它可以使用现有类的所有功能，并在无需重新编写原来的类的情况下对这些功能进行扩展，通过继承创建的新类称为子类和派生类，被继承的类型为基类(父类或者超类) 多态性..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-08-20T01:32:58.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:modified_time","content":"2023-08-20T01:32:58.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"封装","slug":"封装","link":"#封装","children":[]},{"level":2,"title":"继承","slug":"继承","link":"#继承","children":[]},{"level":2,"title":"多态性","slug":"多态性","link":"#多态性","children":[]}],"git":{"createdTime":1692495178000,"updatedTime":1692495178000,"contributors":[{"name":"xiaou","email":"3153566913@qq.com","commits":1}]},"readingTime":{"minutes":1.12,"words":335},"filePathRelative":"interview/day/8/14.md","localizedDate":"2023年8月20日"}');export{e as data};
