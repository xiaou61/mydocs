const l=JSON.parse('{"key":"v-3e50102e","path":"/interview/selected/8.html","title":"Java 基础八股文（背诵版）必看🍉","lang":"zh-CN","frontmatter":{"title":"Java 基础八股文（背诵版）必看🍉","icon":"community","category":["面试"],"tag":["面试"],"sticky":false,"star":true,"article":true,"timeline":true,"description":"Java 语言具有哪些特点？ Java 为纯面向对象的语言。它能够直接反应现实生活中的对象。; 具有平台无关性。Java 利用 Java 虚拟机运行字节码，无论是在 Windows、Linux 还是 MacOS 等其它平台对 Java 程序进行编译，编译后的程序可在其它平台运行。; Java 为解释型语言，编译器把 Java 代码编译成平台无关的中间代...","head":[["meta",{"property":"og:url","content":"https://mydocs.guoyaxue.top/interview/selected/8.html"}],["meta",{"property":"og:site_name","content":"小uの学习笔记"}],["meta",{"property":"og:title","content":"Java 基础八股文（背诵版）必看🍉"}],["meta",{"property":"og:description","content":"Java 语言具有哪些特点？ Java 为纯面向对象的语言。它能够直接反应现实生活中的对象。; 具有平台无关性。Java 利用 Java 虚拟机运行字节码，无论是在 Windows、Linux 还是 MacOS 等其它平台对 Java 程序进行编译，编译后的程序可在其它平台运行。; Java 为解释型语言，编译器把 Java 代码编译成平台无关的中间代..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-08-08T04:27:39.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:modified_time","content":"2023-08-08T04:27:39.000Z"}]]},"excerpt":"","headers":[{"level":3,"title":"Java 语言具有哪些特点？","slug":"java-语言具有哪些特点","link":"#java-语言具有哪些特点","children":[]},{"level":3,"title":"JDK 与 JRE 有什么区别？","slug":"jdk-与-jre-有什么区别","link":"#jdk-与-jre-有什么区别","children":[]},{"level":3,"title":"简述 Java 基本数据类型","slug":"简述-java-基本数据类型","link":"#简述-java-基本数据类型","children":[]},{"level":3,"title":"简述自动装箱拆箱","slug":"简述自动装箱拆箱","link":"#简述自动装箱拆箱","children":[]},{"level":3,"title":"简述 Java 访问修饰符","slug":"简述-java-访问修饰符","link":"#简述-java-访问修饰符","children":[]},{"level":3,"title":"构造方法、成员变量初始化以及静态成员变量三者的初始化顺序？","slug":"构造方法、成员变量初始化以及静态成员变量三者的初始化顺序","link":"#构造方法、成员变量初始化以及静态成员变量三者的初始化顺序","children":[]},{"level":3,"title":"Java 代码块执行顺序","slug":"java-代码块执行顺序","link":"#java-代码块执行顺序","children":[]},{"level":3,"title":"面向对象的三大特性？","slug":"面向对象的三大特性","link":"#面向对象的三大特性","children":[]},{"level":3,"title":"为什么 Java 语言不支持多重继承？","slug":"为什么-java-语言不支持多重继承","link":"#为什么-java-语言不支持多重继承","children":[]},{"level":3,"title":"简述 Java 的多态","slug":"简述-java-的多态","link":"#简述-java-的多态","children":[]},{"level":3,"title":"Java 提供的多态机制？","slug":"java-提供的多态机制","link":"#java-提供的多态机制","children":[]},{"level":3,"title":"重载与覆盖的区别？","slug":"重载与覆盖的区别","link":"#重载与覆盖的区别","children":[]},{"level":3,"title":"接口和抽象类的相同点和不同点？","slug":"接口和抽象类的相同点和不同点","link":"#接口和抽象类的相同点和不同点","children":[]},{"level":3,"title":"简述抽象类与接口的区别","slug":"简述抽象类与接口的区别","link":"#简述抽象类与接口的区别","children":[]},{"level":3,"title":"简述内部类及其作用","slug":"简述内部类及其作用","link":"#简述内部类及其作用","children":[]},{"level":3,"title":"Java 语言中关键字 static 的作用是什么？","slug":"java-语言中关键字-static-的作用是什么","link":"#java-语言中关键字-static-的作用是什么","children":[]},{"level":3,"title":"为什么要把 String 设计为不可变？","slug":"为什么要把-string-设计为不可变","link":"#为什么要把-string-设计为不可变","children":[]},{"level":3,"title":"简述 String/StringBuffer 与 StringBuilder","slug":"简述-string-stringbuffer-与-stringbuilder","link":"#简述-string-stringbuffer-与-stringbuilder","children":[]},{"level":3,"title":"判等运算符==与 equals 的区别？","slug":"判等运算符-与-equals-的区别","link":"#判等运算符-与-equals-的区别","children":[]},{"level":3,"title":"简述 Object 类常用方法","slug":"简述-object-类常用方法","link":"#简述-object-类常用方法","children":[]},{"level":3,"title":"Java 中一维数组和二维数组的声明方式？","slug":"java-中一维数组和二维数组的声明方式","link":"#java-中一维数组和二维数组的声明方式","children":[]},{"level":3,"title":"简述 Java 异常的分类","slug":"简述-java-异常的分类","link":"#简述-java-异常的分类","children":[]},{"level":3,"title":"简述 throw 与 throws 的区别","slug":"简述-throw-与-throws-的区别","link":"#简述-throw-与-throws-的区别","children":[]},{"level":3,"title":"出现在 Java 程序中的 finally 代码块是否一定会执行？","slug":"出现在-java-程序中的-finally-代码块是否一定会执行","link":"#出现在-java-程序中的-finally-代码块是否一定会执行","children":[]},{"level":3,"title":"final、finally 和 finalize 的区别是什么？","slug":"final、finally-和-finalize-的区别是什么","link":"#final、finally-和-finalize-的区别是什么","children":[]},{"level":3,"title":"简述泛型","slug":"简述泛型","link":"#简述泛型","children":[]},{"level":3,"title":"简述泛型擦除","slug":"简述泛型擦除","link":"#简述泛型擦除","children":[]},{"level":3,"title":"简述注解","slug":"简述注解","link":"#简述注解","children":[]},{"level":3,"title":"简述元注解","slug":"简述元注解","link":"#简述元注解","children":[]},{"level":3,"title":"简述 Java 中 Class 对象","slug":"简述-java-中-class-对象","link":"#简述-java-中-class-对象","children":[]},{"level":3,"title":"Java 反射机制是什么？","slug":"java-反射机制是什么","link":"#java-反射机制是什么","children":[]},{"level":3,"title":"序列化是什么？","slug":"序列化是什么","link":"#序列化是什么","children":[]},{"level":3,"title":"简述 Java 序列化与反序列化的实现","slug":"简述-java-序列化与反序列化的实现","link":"#简述-java-序列化与反序列化的实现","children":[]},{"level":3,"title":"简述 Java 的 List","slug":"简述-java-的-list","link":"#简述-java-的-list","children":[]},{"level":3,"title":"Java 中线程安全的基本数据结构有哪些","slug":"java-中线程安全的基本数据结构有哪些","link":"#java-中线程安全的基本数据结构有哪些","children":[]},{"level":3,"title":"简述 Java 的 Set","slug":"简述-java-的-set","link":"#简述-java-的-set","children":[]},{"level":3,"title":"简述 Java 的 HashMap","slug":"简述-java-的-hashmap","link":"#简述-java-的-hashmap","children":[]},{"level":3,"title":"为何 HashMap 线程不安全","slug":"为何-hashmap-线程不安全","link":"#为何-hashmap-线程不安全","children":[]},{"level":3,"title":"简述 Java 的 TreeMap","slug":"简述-java-的-treemap","link":"#简述-java-的-treemap","children":[]},{"level":3,"title":"ArrayList、Vector 和 LinkedList 有什么共同点与区别？","slug":"arraylist、vector-和-linkedlist-有什么共同点与区别","link":"#arraylist、vector-和-linkedlist-有什么共同点与区别","children":[]},{"level":3,"title":"HashMap 和 Hashtable 有什么区别？","slug":"hashmap-和-hashtable-有什么区别","link":"#hashmap-和-hashtable-有什么区别","children":[]},{"level":3,"title":"如何决定使用 HashMap 还是 TreeMap?","slug":"如何决定使用-hashmap-还是-treemap","link":"#如何决定使用-hashmap-还是-treemap","children":[]},{"level":3,"title":"HashSet 中，equals 与 hashCode 之间的关系？","slug":"hashset-中-equals-与-hashcode-之间的关系","link":"#hashset-中-equals-与-hashcode-之间的关系","children":[]},{"level":3,"title":"fail-fast 和 fail-safe 迭代器的区别是什么？","slug":"fail-fast-和-fail-safe-迭代器的区别是什么","link":"#fail-fast-和-fail-safe-迭代器的区别是什么","children":[]},{"level":3,"title":"Collection 和 Collections 有什么区别？","slug":"collection-和-collections-有什么区别","link":"#collection-和-collections-有什么区别","children":[]}],"git":{"createdTime":1691468859000,"updatedTime":1691468859000,"contributors":[{"name":"Lenovo","email":"3153566913@qq.com","commits":1}]},"readingTime":{"minutes":20.74,"words":6222},"filePathRelative":"interview/selected/8.md","localizedDate":"2023年8月8日"}');export{l as data};
