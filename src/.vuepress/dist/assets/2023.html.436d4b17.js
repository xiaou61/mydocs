import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{r as o,o as c,c as i,a as s,b as n,d as t,e as p}from"./app.c5b3201b.js";const l={},u=s("h2",{id:"_1-实战豆瓣top250",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-实战豆瓣top250","aria-hidden":"true"},"#"),n(" 1.实战豆瓣top250")],-1),r=s("p",null,"这例用bs加上requests",-1),k=s("p",null,"网址是豆瓣的top250",-1),d={href:"http://douban.com",target:"_blank",rel:"noopener noreferrer"},m=p(`<p>还是一个大概的框架</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">:</span>
   url <span class="token operator">=</span> <span class="token string">&#39;https://movie.douban.com/top250?start=&#39;</span><span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>page<span class="token operator">*</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;&amp;filter=&#39;</span>
   html <span class="token operator">=</span> request_douban<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
   soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span> <span class="token string">&#39;lxml&#39;</span><span class="token punctuation">)</span>
   save_to_excel<span class="token punctuation">(</span>soup<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先保存请求豆瓣的。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">request_douban</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
   <span class="token keyword">try</span><span class="token punctuation">:</span>
       response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
       <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
           <span class="token keyword">return</span> response<span class="token punctuation">.</span>text
   <span class="token keyword">except</span> requests<span class="token punctuation">.</span>RequestException<span class="token punctuation">:</span>
       <span class="token keyword">return</span> <span class="token boolean">None</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后进行解析。</p><p>之后用bs4进行解析。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">list</span> <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">&#39;grid_view&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span>

   <span class="token keyword">for</span> item <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">:</span>
       item_name <span class="token operator">=</span> item<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>string
       item_img <span class="token operator">=</span> item<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span>
       item_index <span class="token operator">=</span> item<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>string
       item_score <span class="token operator">=</span> item<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">&#39;rating_num&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>string
       item_author <span class="token operator">=</span> item<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text
       item_intr <span class="token operator">=</span> item<span class="token punctuation">.</span>find<span class="token punctuation">(</span>class_<span class="token operator">=</span><span class="token string">&#39;inq&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>string
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后可以将这些数据存储到excel表格里面</p><p>这里用到xlwt</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>book<span class="token operator">=</span>xlwt<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span>style_compression<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>

sheet<span class="token operator">=</span>book<span class="token punctuation">.</span>add_sheet<span class="token punctuation">(</span><span class="token string">&#39;豆瓣电影Top250&#39;</span><span class="token punctuation">,</span>cell_overwrite_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&#39;名称&#39;</span><span class="token punctuation">)</span>
sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;图片&#39;</span><span class="token punctuation">)</span>
sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;排名&#39;</span><span class="token punctuation">)</span>
sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;评分&#39;</span><span class="token punctuation">)</span>
sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;作者&#39;</span><span class="token punctuation">)</span>
sheet<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&#39;简介&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后进行一下保存</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>book<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">u&#39;豆瓣最受欢迎的250部电影.xlsx&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>就可以了。</p><h2 id="_2-爬取1000首背景音乐" tabindex="-1"><a class="header-anchor" href="#_2-爬取1000首背景音乐" aria-hidden="true">#</a> 2.<strong>爬取1000首背景音乐</strong></h2><p>这里选取的网站是</p>`,15),v={href:"http://tuke88.com",target:"_blank",rel:"noopener noreferrer"},b=p(`<p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403809.png" alt="" loading="lazy"></p><p>我们发现这个网站的爬取是非常的简单的。</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403806.png" alt="" loading="lazy"></p><p>结构非常的简单。</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403819.png" alt="" loading="lazy"></p><p>这个分页的规律也很简单</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403816.png" alt="" loading="lazy"></p><p>具体就是lmt-&gt; audio-list 定位到a</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//div[@class=&#39;lmt&#39;]//div[@class=&#39;audio-list&#39;]//a[@class=&#39;title&#39;]/text()&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个就是title的，之后的audio也是同理。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> lxml<span class="token punctuation">.</span>etree

page_n<span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你想要爬取的网页数量&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>page_n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&#39;https://www.tuke88.com/peiyue/zonghe_0_</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">.html&#39;</span></span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>

    <span class="token comment"># 修改html中的语法错误</span>
    html_parser <span class="token operator">=</span> lxml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>HTMLParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
    html <span class="token operator">=</span> lxml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>fromstring<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span> parser<span class="token operator">=</span>html_parser<span class="token punctuation">)</span>
    titles <span class="token operator">=</span> html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//div[@class=&#39;lmt&#39;]//div[@class=&#39;audio-list&#39;]//a[@class=&#39;title&#39;]/text()&quot;</span><span class="token punctuation">)</span>
    mp3_urls<span class="token operator">=</span>html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//div[@class=&#39;lmt&#39;]//div[@class=&#39;audio-list&#39;]//source/@src&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>mp3_urls<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就可以了，之后我们要把文件存储到本地。</p><p>之后进行存储</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">&#39;pymp3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span><span class="token string">&#39;pymp3&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> title<span class="token punctuation">,</span>mp3_urls <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>titles<span class="token punctuation">,</span>mp3_urls<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">#mp3一般流下载</span>
    mp3_stream <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>mp3_urls<span class="token punctuation">,</span> stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&#39;pymp3&#39;</span><span class="token punctuation">,</span>title<span class="token operator">+</span><span class="token string">&quot;.mp3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;wb+&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> writer<span class="token punctuation">:</span>
        writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span>mp3_stream<span class="token punctuation">.</span>raw<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;【Info】</span><span class="token interpolation"><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span><span class="token string">.mp3下载成功&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后加入随机时间</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>time.sleep(random.uniform(0.1,0.4))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403813.png" alt="" loading="lazy"></p><p>这样就可以了。下面就是我们的全部源码</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> random
<span class="token keyword">import</span> time
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> lxml<span class="token punctuation">.</span>etree
<span class="token keyword">import</span> os
page_n<span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你想要爬取的网页数量&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>page_n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&#39;https://www.tuke88.com/peiyue/zonghe_0_</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">.html&#39;</span></span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>

    <span class="token comment"># 修改html中的语法错误</span>
    html_parser <span class="token operator">=</span> lxml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>HTMLParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
    html <span class="token operator">=</span> lxml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>fromstring<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span> parser<span class="token operator">=</span>html_parser<span class="token punctuation">)</span>
    titles <span class="token operator">=</span> html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//div[@class=&#39;lmt&#39;]//div[@class=&#39;audio-list&#39;]//a[@class=&#39;title&#39;]/text()&quot;</span><span class="token punctuation">)</span>
    mp3_urls<span class="token operator">=</span>html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//div[@class=&#39;lmt&#39;]//div[@class=&#39;audio-list&#39;]//source/@src&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>mp3_urls<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">&#39;pymp3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span><span class="token string">&#39;pymp3&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> title<span class="token punctuation">,</span>mp3_urls <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>titles<span class="token punctuation">,</span>mp3_urls<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token comment">#mp3一般流下载</span>
        mp3_stream <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>mp3_urls<span class="token punctuation">,</span> stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&#39;pymp3&#39;</span><span class="token punctuation">,</span>title<span class="token operator">+</span><span class="token string">&quot;.mp3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;wb+&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> writer<span class="token punctuation">:</span>
            writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span>mp3_stream<span class="token punctuation">.</span>raw<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;【Info】</span><span class="token interpolation"><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span><span class="token string">.mp3下载成功&#39;</span></span><span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后我们来详细说一下这个流的下载，和我们普通的有什么不同</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403828.png" alt="" loading="lazy"></p><p>如果为false，他就是立即下载的意思。</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403339.png" alt="" loading="lazy"></p><h2 id="_3-爬取csdn" tabindex="-1"><a class="header-anchor" href="#_3-爬取csdn" aria-hidden="true">#</a> 3.爬取csdn</h2><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403398.png" alt="" loading="lazy"></p><p>这里的JavaScript就不做过多的讲解了。</p><p>我们首先来进行一个分析</p><h3 id="博客主页博客文章分析" tabindex="-1"><a class="header-anchor" href="#博客主页博客文章分析" aria-hidden="true">#</a> 博客主页博客文章分析</h3><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403445.png" alt="" loading="lazy"></p><p>我们发现我们往下滑的时候，明显是有ajax请求的。</p><p>看我们的请求参数</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403500.png" alt="" loading="lazy"></p><p>我们发现这个username就是一个博主姓名的标志</p><p>以及他的一些返回信息。</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403565.png" alt="" loading="lazy"></p><p>这里可以用articledID或者是url都可以。我们路由用</p><p>articledId</p><p>下面我们开始正式爬取</p><h3 id="爬取页面数据" tabindex="-1"><a class="header-anchor" href="#爬取页面数据" aria-hidden="true">#</a> 爬取页面数据</h3><p>我们分析可以看到</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403623.png" alt="" loading="lazy"></p><p>需要的数据在这里div id是content_views</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">crawler_blog_by</span><span class="token punctuation">(</span>author_name<span class="token punctuation">,</span>article_id<span class="token punctuation">,</span>title<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>
     article_request_url<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&quot;https://blog.csdn.net/</span><span class="token interpolation"><span class="token punctuation">{</span>author_name<span class="token punctuation">}</span></span><span class="token string">/article/details/</span><span class="token interpolation"><span class="token punctuation">{</span>article_id<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
     response <span class="token operator">=</span> sess<span class="token punctuation">.</span>get<span class="token punctuation">(</span>article_request_url<span class="token punctuation">)</span>

     selector <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
     head_msg <span class="token operator">=</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">r&quot;//head&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
     head_str <span class="token operator">=</span> etree<span class="token punctuation">.</span>tostring<span class="token punctuation">(</span>head_msg<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span> method<span class="token operator">=</span><span class="token string">&#39;html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
     body_msg <span class="token operator">=</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">r&quot;//div[@id=&#39;content_views]&#39;&quot;</span><span class="token punctuation">)</span>
     body_str <span class="token operator">=</span> etree<span class="token punctuation">.</span>tostring<span class="token punctuation">(</span>body_msg<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> method<span class="token operator">=</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们有了之后，我们就保存为html就可以了</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">&quot;c_articles&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span><span class="token string">&quot;c_articles&quot;</span><span class="token punctuation">)</span>
<span class="token comment"># title进行一些优化</span>
title <span class="token operator">=</span> title<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">&quot;: &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>

save_file_name <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&quot;c_articles&quot;</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>author_name<span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>article_id<span class="token punctuation">}</span></span><span class="token string">.html&#39;</span></span><span class="token punctuation">)</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>save_file_name<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> writer<span class="token punctuation">:</span>
    writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;&quot;&quot;&lt;head&gt; &lt;meta charset=&quot;utf-8 &lt;/head&gt;
        </span><span class="token interpolation"><span class="token punctuation">{</span>body_str<span class="token punctuation">}</span></span><span class="token string">
    &quot;&quot;&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;【info】: </span><span class="token interpolation"><span class="token punctuation">{</span>author_name<span class="token punctuation">}</span></span><span class="token string">第</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">篇博文</span><span class="token interpolation"><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>article_id<span class="token punctuation">}</span></span><span class="token string">.html保存文件成功&#39;</span></span><span class="token punctuation">)</span>
    i <span class="token operator">+=</span> <span class="token number">1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后我们开始循环爬取</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 循环爬取分页html</span>
<span class="token keyword">for</span> page_no <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>MAX_PAGE_NUM<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        data <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;page&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;size&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;20&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;businessType&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;blog&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;orderby&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;noMore&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;false&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;year&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;month&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;username&#39;</span><span class="token punctuation">:</span> author_name<span class="token punctuation">}</span>
        pages_dict <span class="token operator">=</span> sess<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;https://blog.csdn.net/community/home-api/v1/get-business-list&#39;</span><span class="token punctuation">,</span> params<span class="token operator">=</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> article <span class="token keyword">in</span> pages_dict<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            article_id <span class="token operator">=</span> article<span class="token punctuation">[</span><span class="token string">&#39;articleId&#39;</span><span class="token punctuation">]</span>
            title <span class="token operator">=</span> article<span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span>
            crawler_blog_by<span class="token punctuation">(</span>author_name<span class="token punctuation">,</span>article_id<span class="token punctuation">,</span>title<span class="token punctuation">,</span>i<span class="token punctuation">)</span>

        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token comment">#log日志文件系统，实际开发的话</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403941.png" alt="" loading="lazy"></p><p>这里就是对数据简单的进行了一些分析</p><p>这里有一些bug</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403994.png" alt="" loading="lazy"></p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403058.png" alt="" loading="lazy"></p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403120.png" alt="" loading="lazy"></p><p>那么我们怎么办呢</p><p>我们给他定义成全局的i</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403160.png" alt="" loading="lazy"></p><p>这样就可以了</p><p>之后我们来看如何下载这个pdf的插件</p><p>wkhtmltopdf</p><p>官网是在这里的</p><p>然后配置环境变量就可以了</p><h3 id="保存为pdf文件" tabindex="-1"><a class="header-anchor" href="#保存为pdf文件" aria-hidden="true">#</a> 保存为pdf文件</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">html_to_pdf</span><span class="token punctuation">(</span>file_html_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    pre_file_name <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file_html_name<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment">#这里的0就是.html前面，1就是html</span>
    pdfkit<span class="token punctuation">.</span>from_file<span class="token punctuation">(</span>file_html_name<span class="token punctuation">,</span>pre_file_name<span class="token operator">+</span><span class="token string">&quot;.pdf&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>很简单</p><p>下面我们就来看全部的源码</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token triple-quoted-string string">&quot;&quot;&quot;
1 爬取博主的所有博文的article_ids
2 根据id爬取html
3 保存为html 在保存一个pdf格式
&quot;&quot;&quot;</span>
<span class="token keyword">import</span> random
<span class="token keyword">import</span> time

<span class="token keyword">import</span> requests
<span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree
<span class="token keyword">import</span> pdfkit
<span class="token keyword">import</span> os

author_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输入博主ID:&quot;</span><span class="token punctuation">)</span>
MAX_PAGE_NUM <span class="token operator">=</span> <span class="token number">200</span>
i <span class="token operator">=</span> <span class="token number">1</span>

sess <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>
agent <span class="token operator">=</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.58&quot;</span>
sess<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> agent

<span class="token keyword">def</span> <span class="token function">html_to_pdf</span><span class="token punctuation">(</span>file_html_name<span class="token punctuation">)</span><span class="token punctuation">:</span>

    pre_file_name <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>file_html_name<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token comment">#这里的0就是.html前面，1就是html</span>
    pdfkit<span class="token punctuation">.</span>from_file<span class="token punctuation">(</span>file_html_name<span class="token punctuation">,</span>pre_file_name<span class="token operator">+</span><span class="token string">&quot;.pdf&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">crawler_blog_by</span><span class="token punctuation">(</span>author_name<span class="token punctuation">,</span> article_id<span class="token punctuation">,</span> title<span class="token punctuation">)</span><span class="token punctuation">:</span>
    article_request_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;https://blog.csdn.net/</span><span class="token interpolation"><span class="token punctuation">{</span>author_name<span class="token punctuation">}</span></span><span class="token string">/article/details/</span><span class="token interpolation"><span class="token punctuation">{</span>article_id<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>

    response <span class="token operator">=</span> sess<span class="token punctuation">.</span>get<span class="token punctuation">(</span>article_request_url<span class="token punctuation">)</span>

    selector <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>



    head_msg <span class="token operator">=</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">r&quot;//head&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    head_str <span class="token operator">=</span> etree<span class="token punctuation">.</span>tostring<span class="token punctuation">(</span>head_msg<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">,</span> method<span class="token operator">=</span><span class="token string">&#39;html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
    body_msg <span class="token operator">=</span> selector<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">r&#39;//div[@id=&quot;content_views&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    body_str <span class="token operator">=</span> etree<span class="token punctuation">.</span>tostring<span class="token punctuation">(</span>body_msg<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">,</span> method<span class="token operator">=</span><span class="token string">&quot;html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>


    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">&quot;c_articles&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span><span class="token string">&quot;c_articles&quot;</span><span class="token punctuation">)</span>
    <span class="token comment"># title进行一些优化</span>
    title <span class="token operator">=</span> title<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;: &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>

    save_file_name <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&quot;c_articles&quot;</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>author_name<span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>article_id<span class="token punctuation">}</span></span><span class="token string">.html&#39;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>save_file_name<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> writer<span class="token punctuation">:</span>
        writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;&quot;&quot;&lt;head&gt; &lt;meta charset=&quot;utf-8 &lt;/head&gt;
            </span><span class="token interpolation"><span class="token punctuation">{</span>body_str<span class="token punctuation">}</span></span><span class="token string">
        &quot;&quot;&quot;</span></span><span class="token punctuation">)</span>
        html_to_pdf<span class="token punctuation">(</span>save_file_name<span class="token punctuation">)</span>
        <span class="token keyword">global</span> i
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;【info】: </span><span class="token interpolation"><span class="token punctuation">{</span>author_name<span class="token punctuation">}</span></span><span class="token string">第</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">篇博文</span><span class="token interpolation"><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>article_id<span class="token punctuation">}</span></span><span class="token string">.html保存文件成功&#39;</span></span><span class="token punctuation">)</span>
        i <span class="token operator">+=</span> <span class="token number">1</span>


<span class="token comment"># 循环爬取分页html</span>
<span class="token keyword">for</span> page_no <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>MAX_PAGE_NUM<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        data <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;page&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;size&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;20&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;businessType&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;blog&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;orderby&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;noMore&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;false&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;year&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;month&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;username&#39;</span><span class="token punctuation">:</span> author_name<span class="token punctuation">}</span>
        pages_dict <span class="token operator">=</span> sess<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;https://blog.csdn.net/community/home-api/v1/get-business-list&#39;</span><span class="token punctuation">,</span> params<span class="token operator">=</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> article <span class="token keyword">in</span> pages_dict<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            article_id <span class="token operator">=</span> article<span class="token punctuation">[</span><span class="token string">&#39;articleId&#39;</span><span class="token punctuation">]</span>
            title <span class="token operator">=</span> article<span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span>
            crawler_blog_by<span class="token punctuation">(</span>author_name<span class="token punctuation">,</span>article_id<span class="token punctuation">,</span>title<span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token comment">#log日志文件系统，实际开发的话</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-觅知网" tabindex="-1"><a class="header-anchor" href="#_4-觅知网" aria-hidden="true">#</a> 4.觅知网</h2><p>我们进行一下分析</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403481.png" alt="" loading="lazy"></p><p>首先来看响应的</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403567.png" alt="" loading="lazy"></p><p>通过比较我们发现</p>`,72),g={href:"https://www.51miz.com/so-sucai/86201/p_1/",target:"_blank",rel:"noopener noreferrer"},h=p(`<p>为第一页，p_2就是第二页</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403626.png" alt="" loading="lazy"></p><p>这些是我们需要发送的参数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>url<span class="token operator">=</span><span class="token string">&quot;https://www.51miz.com/index.php?m=relate&amp;ajax=1&quot;</span>
params<span class="token operator">=</span><span class="token punctuation">{</span>
    <span class="token string">&#39;pagesource&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;advice&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;keyword&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;跑车&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;keyword_id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token comment">#这里经过测试是可以为空的</span>
    <span class="token string">&#39;plate_id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;plate_path&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;sucai&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;where_search&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;all&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后是对这些进行下载</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.58&quot;</span>
<span class="token punctuation">}</span>

response1 <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
index_dict <span class="token operator">=</span> response1<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> item <span class="token keyword">in</span> index_dict<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;【开始下载】 : 类别为</span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">[</span><span class="token string">&#39;word&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">的图片&quot;</span></span><span class="token punctuation">)</span>
    index_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token format-spec">-5]</span><span class="token punctuation">}</span></span><span class="token string">/p_</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
    response2 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>index_url<span class="token punctuation">)</span>
    html_parser <span class="token operator">=</span> lxml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>HTMLParser
    html <span class="token operator">=</span> lxml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>fromstring<span class="token punctuation">(</span>response2<span class="token punctuation">.</span>text<span class="token punctuation">,</span> parser<span class="token operator">=</span>html_parser<span class="token punctuation">)</span>
    titles<span class="token operator">=</span>html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//a[@class=&#39;image-box&#39;]//img/@title&quot;</span><span class="token punctuation">)</span>
    html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//img[@class=&#39;lazyload&#39;]/@data-original&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string">&#39;picture&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span><span class="token string">&#39;picture&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后我们开始持久化存储</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> title<span class="token punctuation">,</span>pic_url <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>titles<span class="token punctuation">,</span>pic_url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        png_url<span class="token operator">=</span>pic_url<span class="token punctuation">[</span><span class="token punctuation">:</span>pic_url<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">#提取！以前的</span>
        pic_stream <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;https:</span><span class="token interpolation"><span class="token punctuation">{</span>png_url<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        title<span class="token operator">=</span>title<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">200</span><span class="token punctuation">]</span> <span class="token comment">#文件名限制为255</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&#39;picture&#39;</span><span class="token punctuation">,</span>title<span class="token operator">+</span><span class="token string">&quot;.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;wb+&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> writer<span class="token punctuation">:</span>
            writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span>pic_stream<span class="token punctuation">.</span>raw<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;【INFO】</span><span class="token interpolation"><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span><span class="token string">下载成功&quot;</span></span><span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;error.log&quot;</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fo<span class="token punctuation">:</span>
            fo<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>至此就可以了。下面我们来看一个全部的代码</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> time
<span class="token keyword">import</span> random
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> lxml<span class="token punctuation">.</span>etree
<span class="token keyword">import</span> os

key_word <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输入下载图片的关键词&quot;</span><span class="token punctuation">)</span>
page_n <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输入要爬取的网页数量&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
url <span class="token operator">=</span> <span class="token string">&quot;https://www.51miz.com/index.php?m=relate&amp;ajax=1&quot;</span>
params <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;pagesource&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;advice&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;keyword&#39;</span><span class="token punctuation">:</span> key_word<span class="token punctuation">,</span>
    <span class="token string">&#39;keyword_id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># 这里经过测试是可以为空的</span>
    <span class="token string">&#39;plate_id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;plate_path&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;sucai&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;where_search&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;all&#39;</span>
<span class="token punctuation">}</span>
headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.58&quot;</span>
<span class="token punctuation">}</span>
response1 <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
index_dict <span class="token operator">=</span> response1<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
each_class_n <span class="token operator">=</span> page_n <span class="token operator">//</span> <span class="token builtin">len</span><span class="token punctuation">(</span>index_dict<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
<span class="token keyword">for</span> item <span class="token keyword">in</span> index_dict<span class="token punctuation">:</span>
    j <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">while</span> j <span class="token operator">&lt;=</span> each_class_n<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;【开始下载】 : 类别为</span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">[</span><span class="token string">&#39;word&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">的图片&quot;</span></span><span class="token punctuation">)</span>
        index_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>item<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token format-spec">-5]</span><span class="token punctuation">}</span></span><span class="token string">/p_</span><span class="token interpolation"><span class="token punctuation">{</span>j<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
        response2 <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>index_url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
        html_parser <span class="token operator">=</span> lxml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>HTMLParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
        html <span class="token operator">=</span> lxml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>fromstring<span class="token punctuation">(</span>response2<span class="token punctuation">.</span>text<span class="token punctuation">,</span> parser<span class="token operator">=</span>html_parser<span class="token punctuation">)</span>
        titles <span class="token operator">=</span> html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//a[@class=&#39;image-box&#39;]//img/@title&quot;</span><span class="token punctuation">)</span>
        pic_url <span class="token operator">=</span> html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&quot;//img[@class=&#39;lazyload &#39;]/@data-original&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>key_word<span class="token punctuation">)</span><span class="token punctuation">:</span>
            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>key_word<span class="token punctuation">)</span>
        <span class="token keyword">for</span> title<span class="token punctuation">,</span> pic_url <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>titles<span class="token punctuation">,</span> pic_url<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                png_url <span class="token operator">=</span> pic_url<span class="token punctuation">[</span><span class="token punctuation">:</span>pic_url<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">&#39;!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment"># 提取！以前的</span>
                pic_stream <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;https:</span><span class="token interpolation"><span class="token punctuation">{</span>png_url<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
                title <span class="token operator">=</span> title<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">200</span><span class="token punctuation">]</span>  <span class="token comment"># 文件名限制为255</span>
                <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>key_word<span class="token punctuation">,</span> title <span class="token operator">+</span> <span class="token string">&quot;.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;wb+&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> writer<span class="token punctuation">:</span>
                    writer<span class="token punctuation">.</span>write<span class="token punctuation">(</span>pic_stream<span class="token punctuation">.</span>raw<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;【INFO】</span><span class="token interpolation"><span class="token punctuation">{</span>title<span class="token punctuation">}</span></span><span class="token string">下载成功&quot;</span></span><span class="token punctuation">)</span>
                    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>random<span class="token punctuation">.</span>uniform<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0.4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
                <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;error.log&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fo<span class="token punctuation">:</span>
                    fo<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
    j <span class="token operator">+=</span> <span class="token number">1</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-微博超话爬取" tabindex="-1"><a class="header-anchor" href="#_5-微博超话爬取" aria-hidden="true">#</a> 5.微博超话爬取</h2><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403701.png" alt="" loading="lazy"></p><p>我们发现这里是有一个高级搜素的。这个可以作为我们的一个，爬取的思路</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403797.png" alt="" loading="lazy"></p><p>很显然是没有加密过的。</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403877.png" alt="" loading="lazy"></p><p>之后去网页上定位一下内容。</p><p>同时对于展开的这个问题</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403918.png" alt="" loading="lazy"></p><p>就是很简单。俩个不一样的。</p><h3 id="构造小时对" tabindex="-1"><a class="header-anchor" href="#构造小时对" aria-hidden="true">#</a> 构造小时对</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> calendar


<span class="token keyword">def</span> <span class="token function">create_hour_list</span><span class="token punctuation">(</span>year<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> month <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        month_days<span class="token operator">=</span>calendar<span class="token punctuation">.</span>monthrange<span class="token punctuation">(</span>year<span class="token punctuation">,</span>month<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token comment">#返回多少天</span>
        <span class="token keyword">for</span> day <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>month_days<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            ymd<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>year<span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>month<span class="token punctuation">:</span><span class="token format-spec">&gt;02</span><span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>day<span class="token punctuation">:</span><span class="token format-spec">&gt;02</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
            data_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ymd<span class="token punctuation">)</span>
    day_hour_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>day<span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>hour<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span> <span class="token keyword">for</span> day <span class="token keyword">in</span> data_list <span class="token keyword">for</span> hour <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token keyword">return</span> day_hour_list

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    hour_list <span class="token operator">=</span> create_hour_list<span class="token punctuation">(</span><span class="token number">2023</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>hour_list<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个构造很简单。这里就不做介绍了。</p><p>返回格式就是</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403969.png" alt="" loading="lazy"></p><p>和这个一样的</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403097.png" alt="" loading="lazy"></p><p>这个就算是构造完成了。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    year<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;输入要查询微博的年份&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    key_word<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;输入要爬取的主题词&#39;</span><span class="token punctuation">)</span>
    crawler<span class="token punctuation">(</span>key_word<span class="token punctuation">,</span>year<span class="token operator">=</span>year<span class="token punctuation">,</span>only_chaohua<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后我们根据这个格式来写我们的代码</p><h3 id="主要代码" tabindex="-1"><a class="header-anchor" href="#主要代码" aria-hidden="true">#</a> 主要代码</h3><p>这里需要说一个巧妙的地方</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>year_hour_pair<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>year_hour<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>year_hour<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这段代码是将一个名为year_hour的列表进行处理，并生成一个新的列表year_hour_pair。这个新列表包含了year_hour中相邻元素的配对。</p><p>具体来说，zip(year_hour[:-1], year_hour[1:])的作用是将year_hour列表的第一个元素与第二个元素配对，第二个元素与第三个元素配对，以此类推，直到倒数第二个元素与最后一个元素配对。这样就生成了一系列的元组，每个元组中包含了相邻的两个元素。</p><p>举个例子，假设year_hour列表的内容为[2021, 2022, 2023, 2024, 2025]，那么year_hour_pair列表的内容将会是[(2021, 2022), (2022, 2023), (2023, 2024), (2024, 2025)]。</p><p>我们来看一下请求头：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.58&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;referer&#39;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;https://s.weibo.com/weibo/?q=</span><span class="token interpolation"><span class="token punctuation">{</span>key_word<span class="token punctuation">}</span></span><span class="token string">&amp;typeall=1&amp;suball=1&amp;timescope=custom:</span><span class="token interpolation"><span class="token punctuation">{</span>start_hour<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>end_hour<span class="token punctuation">}</span></span><span class="token string">&amp;Refer=g&quot;</span></span><span class="token punctuation">,</span>
    <span class="token string">&#39;cookie&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;login_sid_t=4cf9918868f99a80993ee8db70ea9978; cross_origin_proto=SSL; _s_tentry=passport.weibo.com; Apache=4295370010248.756.1688354182480; SINAGLOBAL=4295370010248.756.1688354182480; ULV=1688354182482:1:1:1:4295370010248.756.1688354182480:; SUB=_2A25Jpk5ADeRhGeFL61MT9ybOzDiIHXVq0jiIrDV8PUNbmtANLVDBkW9NQrM7Yw-SB6k32M9TnUFEl3ZR1SRytf8I; SUBP=0033WrSXqPxfM725Ws9jqgMF55529P9D9WF97F3KxUrKVsFgiw-BcK.W5JpX5KzhUgL.FoMfeh2ES0nES0B2dJLoIp7LxKML1KBLBKnLxKqL1hnLBoMNSK5peoMReoMX; ALF=1719890320; SSOLoginState=1688354320&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用这三个就是可以的</p><p>我们这里介绍一下cookie。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>page_no<span class="token operator">=</span><span class="token number">1</span>
<span class="token keyword">while</span> page_no <span class="token operator">&lt;</span> ASSUME_HOUR_MAX_PAGE_N<span class="token punctuation">:</span>
    url<span class="token operator">=</span>f&quot;https<span class="token punctuation">:</span><span class="token operator">//</span>s<span class="token punctuation">.</span>weibo<span class="token punctuation">.</span>com<span class="token operator">/</span>weibo<span class="token operator">/</span>?q<span class="token operator">=</span><span class="token punctuation">{</span>key_word<span class="token punctuation">}</span><span class="token operator">&amp;</span>typeall<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>suball<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span>timescope<span class="token operator">=</span>custom<span class="token punctuation">:</span><span class="token punctuation">{</span>start_hour<span class="token punctuation">}</span><span class="token punctuation">:</span><span class="token punctuation">{</span>end_hour<span class="token punctuation">}</span><span class="token operator">&amp;</span>Refer<span class="token operator">=</span>g<span class="token operator">&amp;</span>page<span class="token operator">=</span><span class="token punctuation">{</span>page_no<span class="token punctuation">}</span><span class="token punctuation">:</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> sess<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>
        soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">&#39;html5lib&#39;</span><span class="token punctuation">)</span>
        error_bs <span class="token operator">=</span> soup<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;m-error&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> error_bs<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>start_hour<span class="token punctuation">}</span></span><span class="token string">到</span><span class="token interpolation"><span class="token punctuation">{</span>end_hour<span class="token punctuation">}</span></span><span class="token string">时间区域内发布的</span><span class="token interpolation"><span class="token punctuation">{</span>key_word<span class="token punctuation">}</span></span><span class="token string">超话数据,一共</span><span class="token interpolation"><span class="token punctuation">{</span>page_no<span class="token punctuation">}</span></span><span class="token string">页&quot;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">break</span>

        soup<span class="token punctuation">.</span>findAll<span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span>attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;action-type&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;feed_list_item&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里用soup</p><p>假如出错的话，有一个</p><p>error_bs这个。假如有这个的话，就说明已经爬取完了。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>all_bs_list <span class="token operator">=</span> soup<span class="token punctuation">.</span>findAll<span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">,</span> attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;action-type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;feed_list_item&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里是所有的内容</p><p>之后进行一个查找</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> item_bs <span class="token keyword">in</span> all_bs_list<span class="token punctuation">:</span>
    <span class="token keyword">if</span> only_chaohua<span class="token punctuation">:</span>
        topic_from_href<span class="token operator">=</span>item_bs<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;https://huati.weibo.com/11256&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        topic_from<span class="token operator">=</span>item_bs<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>text<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>key_word<span class="token punctuation">}</span></span><span class="token string">超话&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> topic_from_href <span class="token keyword">or</span> topic_from<span class="token punctuation">:</span>
        name_bs <span class="token operator">=</span> item_bs<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        name <span class="token operator">=</span> item_bs<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;nick-name&#39;</span><span class="token punctuation">)</span>
        item_bs<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span>attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;node-type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;feed_list_content_full&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> name_bs<span class="token punctuation">:</span>
            content_bs <span class="token operator">=</span> item_bs<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span> attrs<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;node-type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;feed_list_content&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        content <span class="token operator">=</span> content_bs<span class="token punctuation">.</span>get_text<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>很简单的就不分析了。</p><p>之后持久化存储</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code> <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>year<span class="token punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">{</span>key_word<span class="token punctuation">}</span></span><span class="token string">-微博.csv&#39;</span></span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> appender<span class="token punctuation">:</span>
            appender<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token punctuation">{</span>content<span class="token punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token punctuation">{</span>url<span class="token punctuation">}</span></span><span class="token string">\\n&quot;</span></span><span class="token punctuation">)</span>
page_no<span class="token operator">+=</span><span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后是错误的处理</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;error_log.log&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> error_log<span class="token punctuation">:</span>
        error_log<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面我们来看全部的代码</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>import calendar

import requests
from bs4 import BeautifulSoup
import urllib3


urllib3.disable_warnings()

def create_hour_list(year):
    data_list = []
    for month in range(1, 13):
        month_days = calendar.monthrange(year, month)[1]  # 返回多少天
        for day in range(1, month_days + 1):
            ymd = f&quot;{year}-{month:&gt;02}-{day:&gt;02}&quot;
            data_list.append(ymd)
    day_hour_list = [f&quot;{day}-{hour}&quot; for day in data_list for hour in range(24)]
    return day_hour_list


def crawler(key_word, year, only_chaohua):
    ASSUME_HOUR_MAX_PAGE_N = 100
    year_hour = create_hour_list(year)
    # 组建相邻元素来进行配对
    year_hour_pair = list(zip(year_hour[:-1], year_hour[1:]))
    sess = requests.Session()
    for start_hour, end_hour in year_hour_pair:
        key_word_code = key_word.strip().encode(&#39;utf-8&#39;)
        headers = {
            &#39;User-Agent&#39;: &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 Edg/114.0.1823.58&quot;,
            &#39;referer&#39;: f&quot;https://s.weibo.com/weibo/?q={key_word_code}&amp;typeall=1&amp;suball=1&amp;timescope=custom:{start_hour}:{end_hour}&amp;Refer=g&quot;,
            &#39;cookie&#39;: &quot;login_sid_t=4cf9918868f99a80993ee8db70ea9978; cross_origin_proto=SSL; _s_tentry=passport.weibo.com; Apache=4295370010248.756.1688354182480; SINAGLOBAL=4295370010248.756.1688354182480; ULV=1688354182482:1:1:1:4295370010248.756.1688354182480:; SUB=_2A25Jpk5ADeRhGeFL61MT9ybOzDiIHXVq0jiIrDV8PUNbmtANLVDBkW9NQrM7Yw-SB6k32M9TnUFEl3ZR1SRytf8I; SUBP=0033WrSXqPxfM725Ws9jqgMF55529P9D9WF97F3KxUrKVsFgiw-BcK.W5JpX5KzhUgL.FoMfeh2ES0nES0B2dJLoIp7LxKML1KBLBKnLxKqL1hnLBoMNSK5peoMReoMX; ALF=1719890320; SSOLoginState=1688354320&quot;
        }
        page_no = 1
        while page_no &lt; ASSUME_HOUR_MAX_PAGE_N:
            url = f&quot;https://s.weibo.com/weibo/?q={key_word}&amp;typeall=1&amp;suball=1&amp;timescope=custom:{start_hour}:{end_hour}&amp;Refer=g&amp;page={page_no}&quot;

            try:
                response = sess.get(url, headers=headers, verify=False, timeout=50)
                soup = BeautifulSoup(response.text, &#39;html5lib&#39;)
                error_bs = soup.find(&#39;div&#39;, attrs={&#39;class&#39;: &#39;m-error&#39;})
                if error_bs:
                    print(f&quot;{start_hour}到{end_hour}时间区域内发布的{key_word}超话数据,一共{page_no}页&quot;)
                    break
                all_bs_list = soup.findAll(&#39;div&#39;, attrs={&#39;action-type&#39;: &#39;feed_list_item&#39;})

                for item_bs in all_bs_list:
                    if only_chaohua:
                        topic_from_href=item_bs.find(&#39;a&#39;,attrs={&#39;href&#39;:&#39;https://huati.weibo.com/11256&#39;})
                        topic_from = item_bs.find(&#39;a&#39;, string=f&quot;{key_word}超话&quot;)

                    if topic_from_href or topic_from:
                        name_bs = item_bs.find(&#39;a&#39;, attrs={&#39;class&#39;: &#39;name&#39;})
                        name = name_bs.get(&#39;nick-name&#39;)
                        content_bs = item_bs.find(&#39;p&#39;, attrs={&#39;node-type&#39;: &#39;feed_list_content_full&#39;})
                        if not content_bs:
                            content_bs = item_bs.find(&#39;p&#39;, attrs={&#39;node-type&#39;: &#39;feed_list_content&#39;})
                        content = content_bs.get_text().strip()
                        with open(f&#39;{year}-{key_word}-微博.csv&#39;,&#39;a&#39;,encoding=&#39;utf-8&#39;) as appender:
                            appender.write(f&quot;{name},{content},{url}\\n&quot;)
                page_no+=1
            except Exception as e:
                with open(&#39;error_log.log&#39;,&#39;a&#39;) as error_log:
                    error_log.write(str(e)+&quot;\\n&quot;)
if __name__ == &#39;__main__&#39;:
    year = int(input(&#39;输入要查询微博的年份&#39;))
    key_word = input(&#39;输入要爬取的主题词&#39;)
    crawler(key_word, year=year, only_chaohua=True)

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403491.png" alt="" loading="lazy"></p><h2 id="_6-关于图怪网去水印" tabindex="-1"><a class="header-anchor" href="#_6-关于图怪网去水印" aria-hidden="true">#</a> 6.关于图怪网去水印</h2><p>当时本来想去可画上做一个东西的，发现没有想要的素材，于是去搜索了一下，发现了这个网站。这个如果不开会员的话。</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403528.png" alt="" loading="lazy"></p><p>是有一个浅浅的水印，简单的进行一个分析，首先我在想她是不是一个div的元素，但是找了半天没有找见。后来把她放到了ajax请求上。</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403581.png" alt="" loading="lazy"></p><p>发现了这个，我们右键把她阻断了</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403643.png" alt="" loading="lazy"></p><p>就没有了。</p><p>至于你问如何拿到这个图。</p><p>截屏是最快的方法。</p><p>其他的方法目前研究不出来。</p><h2 id="_7-第一试卷网" tabindex="-1"><a class="header-anchor" href="#_7-第一试卷网" aria-hidden="true">#</a> 7.第一试卷网</h2><p>爬取第一试卷网网站</p>`,69),_={href:"http://shijuan1.com",target:"_blank",rel:"noopener noreferrer"},y=p(`<p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403703.png" alt="image-20230716114503545" loading="lazy"></p><p>先是通过了正则表达式，来获取到了每个试卷的子链接。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">import</span> requests
num<span class="token operator">=</span><span class="token number">1</span>
url<span class="token operator">=</span><span class="token string">&quot;https://www.shijuan1.com/a/sjyy6/list_609_&quot;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;.html&quot;</span>
resp<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
resp<span class="token punctuation">.</span>encoding<span class="token operator">=</span>resp<span class="token punctuation">.</span>apparent_encoding

obj<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;&lt;td width=&#39;52%&#39; height=&#39;23&#39;&gt;&lt;a href=\\&quot;(?P&lt;href&gt;.*?)&quot;</span>
               <span class="token string">r&quot;\\&quot; class=\\&quot;title\\&quot; target=&#39;_blank&#39;&gt;&quot;</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>
result<span class="token operator">=</span>obj<span class="token punctuation">.</span>finditer<span class="token punctuation">(</span>resp<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
<span class="token comment">#定义一个爬虫</span>
child_href_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> it <span class="token keyword">in</span> result<span class="token punctuation">:</span>
   ul<span class="token operator">=</span>it<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后对子页面进行提取</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#提取子页面</span>
<span class="token keyword">for</span> href <span class="token keyword">in</span> child_href_list<span class="token punctuation">:</span>
    child_resp<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>href<span class="token punctuation">)</span>
    child_resp<span class="token punctuation">.</span>encoding<span class="token operator">=</span>child_resp<span class="token punctuation">.</span>apparent_encoding
    result2<span class="token operator">=</span>obj2<span class="token punctuation">.</span>search<span class="token punctuation">(</span>child_resp<span class="token punctuation">.</span>text<span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>
    downloadadress<span class="token operator">=</span>domain<span class="token operator">+</span>result2<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>downloadadress<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于提取到的东西，需要进行下载。</p><p>一个下载的模板。</p><p>原理就是转换为二进制。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#获取试卷</span>
img_resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>downloadadress<span class="token punctuation">)</span>
img_picture_bite <span class="token operator">=</span> img_resp<span class="token punctuation">.</span>content  <span class="token comment"># 这里拿到的是字节</span>
img_name <span class="token operator">=</span> downloadadress<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># 拿到url的最后一个/以后的内容</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>img_name<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>img_picture_bite<span class="token punctuation">)</span>  <span class="token comment"># 将字节写入到文件中</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;over!&quot;</span><span class="token punctuation">,</span> img_name<span class="token punctuation">)</span>
sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 为了防止服务器不把这个ip拉黑。模拟人工访问</span>
<span class="token keyword">break</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后是全部的源码</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">import</span> requests
<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep
num <span class="token operator">=</span> <span class="token number">1</span>
url <span class="token operator">=</span> <span class="token string">&quot;https://www.shijuan1.com/a/sjyy6/list_609_&quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.html&quot;</span>
domain<span class="token operator">=</span><span class="token string">&quot;https://www.shijuan1.com&quot;</span>
resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
resp<span class="token punctuation">.</span>encoding <span class="token operator">=</span> resp<span class="token punctuation">.</span>apparent_encoding

obj <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;&lt;td width=&#39;52%&#39; height=&#39;23&#39;&gt;&lt;a href=\\&quot;(?P&lt;href&gt;.*?)&quot;</span>
                 <span class="token string">r&quot;\\&quot; class=\\&quot;title\\&quot; target=&#39;_blank&#39;&gt;&quot;</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>

obj2<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&#39;&lt;li&gt;&lt;a href=&quot;(?P&lt;download&gt;.*?)&quot; target=&quot;_blank&quot;&#39;</span><span class="token punctuation">)</span>

result <span class="token operator">=</span> obj<span class="token punctuation">.</span>finditer<span class="token punctuation">(</span>resp<span class="token punctuation">.</span>text<span class="token punctuation">)</span>

<span class="token comment"># 定义一个爬虫进行子页面的爬取</span>
child_href_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> it <span class="token keyword">in</span> result<span class="token punctuation">:</span>
    ul <span class="token operator">=</span> it<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span>
    child_href<span class="token operator">=</span>domain<span class="token operator">+</span>it<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token string">&#39;href&#39;</span><span class="token punctuation">)</span>
    child_href_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>child_href<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>child_href_list<span class="token punctuation">)</span>
    <span class="token keyword">break</span>
<span class="token comment">#提取子页面</span>
<span class="token keyword">for</span> href <span class="token keyword">in</span> child_href_list<span class="token punctuation">:</span>
    child_resp<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>href<span class="token punctuation">)</span>
    child_resp<span class="token punctuation">.</span>encoding<span class="token operator">=</span>child_resp<span class="token punctuation">.</span>apparent_encoding
    result2<span class="token operator">=</span>obj2<span class="token punctuation">.</span>search<span class="token punctuation">(</span>child_resp<span class="token punctuation">.</span>text<span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>
    downloadadress<span class="token operator">=</span>domain<span class="token operator">+</span>result2<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token string">&#39;download&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>downloadadress<span class="token punctuation">)</span>
    <span class="token comment">#获取试卷</span>
    img_resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>downloadadress<span class="token punctuation">)</span>
    img_picture_bite <span class="token operator">=</span> img_resp<span class="token punctuation">.</span>content  <span class="token comment"># 这里拿到的是字节</span>
    img_name <span class="token operator">=</span> downloadadress<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># 拿到url的最后一个/以后的内容</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>img_name<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>img_picture_bite<span class="token punctuation">)</span>  <span class="token comment"># 将字节写入到文件中</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;over!&quot;</span><span class="token punctuation">,</span> img_name<span class="token punctuation">)</span>
    sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 为了防止服务器不把这个ip拉黑。模拟人工访问</span>
    <span class="token keyword">break</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里用了break是为了测试方便，当大面积的爬取的时候，不需要break</p><p>成果也是非常的明显。</p><h2 id="_8-实战豆瓣图书爬取新书速递" tabindex="-1"><a class="header-anchor" href="#_8-实战豆瓣图书爬取新书速递" aria-hidden="true">#</a> 8.实战豆瓣图书爬取新书速递</h2><p>这个用的是scrapy</p><p><img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403894.png" alt="image-20230716135047326" loading="lazy"></p>`,16),w={href:"https://book.douban.com/latest?tag=%E5%85%A8%E9%83%A8",target:"_blank",rel:"noopener noreferrer"},q=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>  
    books<span class="token operator">=</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//ul[@class=&quot;chart-dashed-list&quot;]/li&#39;</span><span class="token punctuation">)</span>  
    <span class="token keyword">print</span><span class="token punctuation">(</span>books<span class="token punctuation">)</span>  
    <span class="token keyword">for</span> book <span class="token keyword">in</span> books<span class="token punctuation">:</span>  
        title<span class="token operator">=</span>book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;.//h2/a/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  
        link<span class="token operator">=</span>book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;.//h2/a/@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个就是一个简单的子页面获取。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>  
    books<span class="token operator">=</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//ul[@class=&quot;chart-dashed-list&quot;]/li&#39;</span><span class="token punctuation">)</span>  
    <span class="token keyword">for</span> book <span class="token keyword">in</span> books<span class="token punctuation">:</span>  
        link<span class="token operator">=</span>book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;.//h2/a/@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  
        <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>link<span class="token punctuation">,</span>callback<span class="token operator">=</span>self<span class="token punctuation">.</span>pares_details<span class="token punctuation">)</span>  
  
<span class="token keyword">def</span> <span class="token function">pares_details</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">:</span>  
    title <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//*[@id=&quot;wrapper&quot;]/h1/span/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  
    publisher<span class="token operator">=</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//*[@id=&quot;info&quot;]/a[1]/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  
    <span class="token keyword">print</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span>publisher<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就算是可以爬取一页了。 下面我们来进行分页数据解析 <img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403941.png" alt="image-20230716135113282" loading="lazy"> 我们从这个后一页来当做一个突破点 <img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403993.png" alt="image-20230716135121962" loading="lazy"> 输出的是这个<img src="https://xiaou-1305448902.cos.ap-nanjing.myqcloud.com/img/202308071403057.png" alt="image-20230716135129828" loading="lazy"> 我们发现在第四页就停住了</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> next_url <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>  
    next_url<span class="token operator">=</span>response<span class="token punctuation">.</span>urljoin<span class="token punctuation">(</span>next_url<span class="token punctuation">)</span>  
    <span class="token keyword">print</span><span class="token punctuation">(</span>next_url<span class="token punctuation">)</span>  
    <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>next_url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">)</span>  
<span class="token keyword">else</span><span class="token punctuation">:</span>  
    next_url<span class="token operator">=</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//*[@id=&quot;content&quot;]/div/div[1]/div[4]/span[3]/a/@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  
    next_url <span class="token operator">=</span> response<span class="token punctuation">.</span>urljoin<span class="token punctuation">(</span>next_url<span class="token punctuation">)</span>  
    <span class="token keyword">print</span><span class="token punctuation">(</span>next_url<span class="token punctuation">)</span>  
    <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>next_url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以发现，这个xpath有时候的是span[3] 有时候是span[4] 所以我们用ifelse 下面就是完整的代码：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> scrapy  
  
  
<span class="token keyword">class</span> <span class="token class-name">AppSpider</span><span class="token punctuation">(</span>scrapy<span class="token punctuation">.</span>Spider<span class="token punctuation">)</span><span class="token punctuation">:</span>  
    name <span class="token operator">=</span> <span class="token string">&quot;app&quot;</span>  
    allowed_domains <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;book.douban.com&quot;</span><span class="token punctuation">]</span>  
    start_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;https://book.douban.com/latest&quot;</span><span class="token punctuation">]</span>  
  
    <span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">:</span>  
        books<span class="token operator">=</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//ul[@class=&quot;chart-dashed-list&quot;]/li&#39;</span><span class="token punctuation">)</span>  
        <span class="token keyword">for</span> book <span class="token keyword">in</span> books<span class="token punctuation">:</span>  
            link<span class="token operator">=</span>book<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;.//h2/a/@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  
  
            <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>link<span class="token punctuation">,</span>callback<span class="token operator">=</span>self<span class="token punctuation">.</span>pares_details<span class="token punctuation">)</span>  
        next_url<span class="token operator">=</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//*[@id=&quot;content&quot;]/div/div[1]/div[4]/span[4]/a/@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  
        <span class="token keyword">if</span> next_url <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>  
            next_url<span class="token operator">=</span>response<span class="token punctuation">.</span>urljoin<span class="token punctuation">(</span>next_url<span class="token punctuation">)</span>  
            <span class="token keyword">print</span><span class="token punctuation">(</span>next_url<span class="token punctuation">)</span>  
            <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>next_url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">)</span>  
        <span class="token keyword">else</span><span class="token punctuation">:</span>  
            next_url<span class="token operator">=</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//*[@id=&quot;content&quot;]/div/div[1]/div[4]/span[3]/a/@href&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  
            next_url <span class="token operator">=</span> response<span class="token punctuation">.</span>urljoin<span class="token punctuation">(</span>next_url<span class="token punctuation">)</span>  
            <span class="token keyword">print</span><span class="token punctuation">(</span>next_url<span class="token punctuation">)</span>  
            <span class="token keyword">yield</span> scrapy<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token operator">=</span>next_url<span class="token punctuation">,</span> callback<span class="token operator">=</span>self<span class="token punctuation">.</span>parse<span class="token punctuation">)</span>  
  
    <span class="token keyword">def</span> <span class="token function">pares_details</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">:</span>  
        title <span class="token operator">=</span> response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//*[@id=&quot;wrapper&quot;]/h1/span/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  
        publisher<span class="token operator">=</span>response<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">&#39;//*[@id=&quot;info&quot;]/a[1]/text()&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  
        <span class="token keyword">print</span><span class="token punctuation">(</span>title<span class="token punctuation">,</span>publisher<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，这个需要用代理ip，或者是sleep一下再去发请求，不然会造成被服务器拉黑。</p>`,8);function f(x,j){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,r,k,s("p",null,[n("豆瓣电影 Top 250 ("),s("a",d,[n("douban.com"),t(a)]),n(")")]),m,s("p",null,[n("动态配乐模板下载_精美好看的配乐模板大全_图客巴巴 ("),s("a",v,[n("tuke88.com"),t(a)]),n(")")]),b,s("p",null,[s("a",g,[n("https://www.51miz.com/so-sucai/86201/p_1/"),t(a)])]),h,s("p",null,[n("免费试卷 / 英语试卷 / 六年级_第一试卷网 ("),s("a",_,[n("shijuan1.com"),t(a)]),n(")")]),y,s("p",null,[n("网站再这里："),s("a",w,[n("豆瓣-新书速递"),t(a)]),n(" 之后我们需要拿这个，并且子页面的全部东西。")]),q])}const M=e(l,[["render",f],["__file","2023.html.vue"]]);export{M as default};
