import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{r as t,o as r,c as p,a as n,b as e,d as a,e as o}from"./app.c5b3201b.js";const c={},s=o('<p>CSS<code>margin</code> 和<code>padding</code> 属性使开发者能够控制网页上元素的内部和外部空间，使其具有理想的外观和感觉。</p><p>尽管这些属性很重要，但大多数开发人员，特别是新手，往往对它们有误解。本教程将解开围绕CSS边距与填充的问题。</p><p>我们将介绍CSS盒状模型、<code>margin</code> 和<code>padding</code> 属性的含义、如何以及何时使用它们，以及它们之间的区别。</p><h2 id="css盒状模型" tabindex="-1"><a class="header-anchor" href="#css盒状模型" aria-hidden="true">#</a> CSS盒状模型</h2><p>要有效地理解CSS<code>margin</code> 与<code>padding</code> ，就必须了解CSS盒状模型以及HTML元素如何按照其标准呈现。</p>',5),l={href:"https://link.juejin.cn?target=https%3A%2F%2Fblog.logrocket.com%2Fusing-css-content-visibility-to-boost-your-rendering-performance%2F",target:"_blank",rel:"noopener noreferrer"},g=o(`<p><img src="https://cdn.jsdelivr.net/gh/xiaou61/pictures/Elements-render-boxes-1.png" alt="A Blue Circle And &quot;Hello There!&quot; Elements Render In Boxes" loading="lazy"></p><p>但是，如果浏览器检查这些元素，如下图所示，浏览器的渲染引擎根据CSS盒状模型将这些元素表示为一个盒状。</p><p><img src="https://cdn.jsdelivr.net/gh/xiaou61/pictures/Rendering-engine-sees-elements-box.png" alt="Rendering Engine Sees Blue Circle And &quot;Hello There!&quot; Elements In Boxes" loading="lazy"></p><p>那么，CSS盒状模型究竟是什么呢？它本质上是一个包裹着网站上每个块级HTML元素的盒子。</p><p>每个盒子都由四个区域组成，这些区域由各自的边缘定义：内容边缘、填充边缘、边框边缘和边缘。</p><p><img src="https://cdn.jsdelivr.net/gh/xiaou61/pictures/CSS-box-model.png" alt="CSS Box Model With Maring Edge, Border Edge, Padding Edge, Content Edge, And Picture Of Sunset In Middle" loading="lazy"></p><p>以上面的插图为例，让我们详细介绍一下每个盒子的四个区域。</p><h3 id="内容区" tabindex="-1"><a class="header-anchor" href="#内容区" aria-hidden="true">#</a> 内容区</h3><p>由内容边缘定义的内容区域，表示指定的HTML元素的值。</p><p>例如，如果在网页上添加一个<code>&lt;h1&gt;</code> 元素，该元素的内容就显示为文本，如果添加一个<code>&lt;audio&gt;</code> 元素，该内容就显示为音频播放器。</p><p>在我们上面的例子中，内容是一个图像，由<code>&lt;img&gt;</code> 元素定义。</p><h3 id="填充区域" tabindex="-1"><a class="header-anchor" href="#填充区域" aria-hidden="true">#</a> 填充区域</h3><p>围绕着内容区的是填充区，由填充边定义。一个元素的填充区是其内容区和边界区之间的空间。</p><p>填充区的大小是通过CSS的速记属性<code>padding</code> 或其子属性：<code>padding-top</code>,<code>padding-right</code>,<code>padding-bottom</code>, 和<code>padding-left</code> 来设置的。</p><p>使用CSS<code>padding</code> 属性来设置填充区的大小是非常重要的，因为一个元素的填充区大小可以大大影响或改善网页内容的外观。</p><h3 id="边框区域" tabindex="-1"><a class="header-anchor" href="#边框区域" aria-hidden="true">#</a> 边框区域</h3><p>然后是边框区，它围绕着一个元素的填充区，并作为每个块级HTML元素所包裹的盒子的边缘或盾牌。</p><p>边界区域可以通过向元素添加CSS<code>border</code> 属性来实现。</p><h3 id="边框区域-1" tabindex="-1"><a class="header-anchor" href="#边框区域-1" aria-hidden="true">#</a> 边框区域</h3><p>边框区域，由边框边缘定义，是边框区域周围的一个不可见区域，将一个元素与周围的其他元素分开。</p><p>边距区的大小由CSS速记<code>margin</code> 属性及其子属性决定：<code>margin-top</code>,<code>margin-right</code>,<code>margin-bottom</code>, 和<code>margin-left</code> 。</p><h2 id="margin-对比padding" tabindex="-1"><a class="header-anchor" href="#margin-对比padding" aria-hidden="true">#</a> <code>margin</code> 对比<code>padding</code></h2><p>在上面的章节中，我们谈到了CSS盒状模型和它的四个区域。这四个区域有各自的CSS属性来定义或控制它们。</p><ul><li>内容区是由HTML元素的值定义的</li><li>填充区是由<code>padding</code> 属性定义的</li><li>边界区域是由<code>border</code> 属性定义的。</li><li>边缘区域是由<code>margin</code> 属性定义的。</li></ul><p>尽管这些属性能够定义CSS盒子模型的四个区域，但<code>margin</code> 和<code>padding</code> 属性的影响似乎几乎是无形的。</p><p>如果没有这些属性，当你使用<code>&lt;img&gt;</code> 标签时，你可以看到网页上的一个图像，当你使用<code>border</code> 属性时，你可以看到该图像周围的边框。但是，当向一个元素添加<code>margin</code> 或<code>padding</code> 属性时，你最多只能看到空间。</p><p>而往往，有些人甚至看不到空间，朋友，这就是为什么这两个属性经常被误解或互换使用。</p><p>为了帮助你更好地理解<code>margin</code> 和<code>padding</code> 属性，本节将介绍它们是什么，如何使用它们，它们的区别，以及何时使用<code>padding</code> 与<code>margin</code> 。</p><h3 id="什么是margin" tabindex="-1"><a class="header-anchor" href="#什么是margin" aria-hidden="true">#</a> 什么是<code>margin</code> ？</h3><p>记住，网页上的每个HTML元素都是一个盒子。在此基础上，所有的HTML元素都有四个面：上、右、下和左。</p><p><img src="https://blog.logrocket.com/wp-content/uploads/2021/08/Sides-margin-edge.png" alt="Sides Of Margine Edge With Top, Right, Bottom, Left" loading="lazy"></p><p>margin在HTML元素周围的无形空间将其他元素从它身边推开。</p><p>因为页边距围绕着盒子的所有四边（上、右、下、左），它给我们提供了针对和改变盒子每边或所有边的页边距区域的大小的能力。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">css复制代码margin</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
<span class="token property">margin-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">:</span>
<span class="token property">margin-right</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
<span class="token property">margin-bottom</span><span class="token punctuation">:</span> 70px
<span class="token property">margin-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以使用这些子属性独立地增加或减少顶部、底部、左侧和右侧的边距区域的大小。</p><ul><li><code>margin-top</code></li><li><code>margin-bottom</code></li><li><code>margin-left</code></li><li><code>margin-right</code></li></ul><p>你也可以使用速记属性<code>margin</code> ，一次增加或减少所有边距区的大小。</p><p>在下面的演示中，为圆圈添加了50像素的边距(<code>margin: 50px;</code>)，以便在圆圈和文本之间创造一个空间。</p>`,38),h={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io",target:"_blank",rel:"noopener noreferrer"},u={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo",target:"_blank",rel:"noopener noreferrer"},m={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo%2Fpen%2FyLbrMLy",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,[e("如果你删除"),n("code",null,"margin"),e(" ，两个元素之间的空间就会减少，使它们看起来是连在一起的。这表明，"),n("code",null,"margin"),e(" 属性只在元素外增加空间，而不是在元素内。")],-1),k={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io",target:"_blank",rel:"noopener noreferrer"},F={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo",target:"_blank",rel:"noopener noreferrer"},f={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo%2Fpen%2FQWvPrvL",target:"_blank",rel:"noopener noreferrer"},b=o(`<h3 id="什么是padding" tabindex="-1"><a class="header-anchor" href="#什么是padding" aria-hidden="true">#</a> 什么是<code>padding</code> ？</h3><p><code>padding</code> 属性定义了CSS盒子模型的内部部分。它可以增加或减少填充区的大小。</p><p><img src="https://blog.logrocket.com/wp-content/uploads/2021/08/Increasing-reducing-padding-edge.png" alt="Box Model Showing Increasing Or Reducing Padding Edge" loading="lazy"></p><p>就像HTML元素有四个面一样，HTML元素中的内容，如文本、图片或音频播放器，也有四个面：上、右、左、下。</p><p><code>padding</code> 属性增加或减少了填充区的大小，从而在内容和边框之间创造了一个空间。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token property">css复制代码padding</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
<span class="token property">padding-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">:</span>
<span class="token property">padding-right</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>
<span class="token property">padding-bottom</span><span class="token punctuation">:</span> 70px
<span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就像<code>margin</code> ，<code>padding</code> 属性围绕着内容的所有四个边，让你能够使用这些子属性独立地增加或减少顶部、底部、左侧和右侧的填充大小。</p><ul><li><code>padding-top</code></li><li><code>padding-bottom</code></li><li><code>padding-left</code></li><li><code>padding-right</code></li></ul><p>你还可以使用速记属性<code>padding</code> ，同时增加或减少所有填充区边的大小。</p><p>在下面的演示中，没有添加任何padding。你可以看到，内容文本非常接近边界--这意味着填充区相对较小或不存在--你必须使用<code>padding</code> 属性来增加它。</p>`,10),S={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io",target:"_blank",rel:"noopener noreferrer"},x={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo",target:"_blank",rel:"noopener noreferrer"},j={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo%2Fpen%2FrNmbKzv",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,[e("那么，让我们用"),n("code",null,"padding: 15px"),e(" ，为我们当前的演示添加15像素的填充，看看它对HTML元素的内容会有什么影响。")],-1),y={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io",target:"_blank",rel:"noopener noreferrer"},C={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo",target:"_blank",rel:"noopener noreferrer"},M={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo%2Fpen%2FOJmGZwe",target:"_blank",rel:"noopener noreferrer"},A=n("p",null,"你可以看到，方框的填充区域增加了15像素，从而在内容和边框之间增加了一个空间。",-1),P=n("h2",{id:"margin-和-之间的区别padding",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#margin-和-之间的区别padding","aria-hidden":"true"},"#"),e(),n("code",null,"margin"),e(" 和 之间的区别"),n("code",null,"padding")],-1),L={href:"https://link.juejin.cn?target=https%3A%2F%2Fblog.logrocket.com%2Ftag%2Fcss%2F",target:"_blank",rel:"noopener noreferrer"},E=o('<h3 id="间距" tabindex="-1"><a class="header-anchor" href="#间距" aria-hidden="true">#</a> 间距</h3><p><code>margin</code> 和<code>padding</code> 的核心区别之一是：<code>padding</code> 控制边框和元素内容之间的空间，而<code>margin</code> 控制边框和周围其他元素之间的空间。</p><p>下面的插图表示使用<code>margin</code> 属性时增加的空间。箭头表示在三个不同的元素周围添加的不可见的空间（margin），以确保它们不会相互靠近。</p><p><img src="https://cdn.jsdelivr.net/gh/xiaou61/pictures/Margin-space-around-elements.png" alt="Margin Space Around Element A, Element B, And Element C" loading="lazy"></p><p>而下图代表了使用<code>padding</code> 时添加的空间。箭头表示添加的无形空间（padding），以确保内容（圆形和三角形）不靠近元素的边界。</p><p><img src="https://blog.logrocket.com/wp-content/uploads/2021/08/padding-space-around-elements.png" alt="Padding Space Around Element A and Element B" loading="lazy"></p><p>通俗地讲，<code>padding</code> 允许我们定义元素内部的空间，而<code>margin</code> 允许我们定义元素之间的空间。</p><h3 id="padding-需要背景色-margin-不需要。" tabindex="-1"><a class="header-anchor" href="#padding-需要背景色-margin-不需要。" aria-hidden="true">#</a> <code>Padding</code> 需要背景色；<code>Margin</code> 不需要。</h3><p>margin和padding所创造的空间是不可见的。然而，如果给一个元素添加了背景色，<code>padding</code> 将不再是不可见的，因为它采用了该元素的颜色，而由边距创建的空间仍然是不可见的。</p><p>例如，下面的插图包含两个简单的网页。左边的图片只应用了<code>margin</code> ，而右边的图片只应用了<code>padding</code> 。</p><p>由于背景颜色的存在，padding变得更加明显，而margin似乎仍然不可见。</p><p><img src="https://blog.logrocket.com/wp-content/uploads/2021/08/Maring-vs-padding-rendering.png" alt="Margin Vs. Padding Rendering With Background Color" loading="lazy"></p><h3 id="margin-可以被设置为自动-padding-不能" tabindex="-1"><a class="header-anchor" href="#margin-可以被设置为自动-padding-不能" aria-hidden="true">#</a> <code>margin</code> 可以被设置为自动；<code>padding</code> 不能</h3><p>如果你为一个有固定宽度的元素设置<code>margin: auto</code> ，它就会将该元素水平居中（或者在使用flexbox时垂直居中）。</p>',14),T={href:"https://link.juejin.cn?target=https%3A%2F%2Ftwitter.com%2Foverflow_meme%2Fstatus%2F1233967116782579714%3Flang%3Den",target:"_blank",rel:"noopener noreferrer"},B=n("p",null,[e("另一方面，不可能将"),n("code",null,"padding"),e(" 到"),n("code",null,"auto"),e(" 。")],-1),H={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io",target:"_blank",rel:"noopener noreferrer"},w={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo",target:"_blank",rel:"noopener noreferrer"},z={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo%2Fpen%2FoNWOMLb",target:"_blank",rel:"noopener noreferrer"},D=n("h3",{id:"margin-可以有一个负值-padding-不能。",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#margin-可以有一个负值-padding-不能。","aria-hidden":"true"},"#"),e(),n("code",null,"margin"),e(" 可以有一个负值；"),n("code",null,"padding"),e(" 不能。")],-1),I=n("p",null,[e("如果你想让元素重叠，你可以将"),n("code",null,"margin"),e(" 值设置为负值。当你想在你的网站上实现美丽的设计时，这个负值会非常有用。")],-1),R={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io",target:"_blank",rel:"noopener noreferrer"},N={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo",target:"_blank",rel:"noopener noreferrer"},W={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo%2Fpen%2FMWmRBMg",target:"_blank",rel:"noopener noreferrer"},O=o('<p><code>padding</code> ，但是，数值只能是正的，因为负的padding会导致边框塌陷到内容中，使内容区域小于内容本身。</p><h3 id="padding-忽略了内联元素" tabindex="-1"><a class="header-anchor" href="#padding-忽略了内联元素" aria-hidden="true">#</a> <code>padding</code> 忽略了内联元素</h3><p>当你在一个内联元素上添加<code>padding</code> ，其变化只反映在元素的左侧和右侧，而不是顶部和底部。</p><p>例如，下面的演示有一个span元素<code>&lt;span&gt;super&lt;/span&gt;</code> ，其填充物为20像素(<code>padding: 20px;</code>)。正如你所看到的，这只在元素的左边和右边增加了空间，而不是在顶部和底部。</p>',4),V={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io",target:"_blank",rel:"noopener noreferrer"},q={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodepen.io%2Fedyasikpo%2Fpen%2FwvdZxLQ",target:"_blank",rel:"noopener noreferrer"},Z=o('<h2 id="什么时候应该使用margin-与padding" tabindex="-1"><a class="header-anchor" href="#什么时候应该使用margin-与padding" aria-hidden="true">#</a> 什么时候应该使用<code>margin</code> 与<code>padding</code>?</h2><p><code>padding</code> 和<code>margin</code> 是网页设计中的两个重要元素，可以在不同的地方增加额外的空间。但是，你应该在什么地方和什么时候使用一个而不是另一个？</p><p>对于<code>padding</code> ，你可以在以下情况下使用它。</p><ul><li>当你不希望你的内容接触到容器的边缘时</li><li>当你想增加一个内容块的大小而不使内容本身变大时</li><li>当你需要在一个内部元素和父箱之间有空间时</li><li>当你希望元素的背景显示在产生的间隙中时</li><li>需要在border外侧添加空白时;</li><li>空白处不需要背景色时;</li><li>上下相连得两个盒子之间的空白需要相互抵消时，如15px+20px得margin，将得到20px的空白。（margin折叠）</li></ul><p>对于<code>margin</code> ，在以下情况下使用。</p><ul><li>当你需要元素周围的空间时，例如分隔一张照片和描述它的文字</li><li>当你想让一个元素水平居中时</li><li>当你想让元素重叠的时候</li><li>当你想把一个元素向上、向下、或向两侧移动时</li><li>需要在border内侧添加空白时。</li><li>空白处需要背景（色）时。</li></ul><h2 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h2><p>在 CSS 中，margin 和 padding 都是用来设置元素的外边距和内边距的，但是它们有一些明显的不同。</p><p>Margin 是元素与其他元素之间的空隙，它是外边距的一部分。例如，您可以使用 margin 设置两个相邻的 div 之间的空隙。</p><p>Padding 是元素内部的空隙，它是内边距的一部分。例如，您可以使用 padding 设置文本与元素边框之间的空隙。</p><p>总的来说，margin 和 padding 都可以用来调整元素的大小和布局，但是它们的应用场景略有不同。例如，如果您想要创建两个相邻的元素之间的空隙，则可以使用 margin。如果您想要为文本或其他内容腾出空间，则可以使用 padding。</p>',11);function G(J,K){const d=t("ExternalLinkIcon");return r(),p("div",null,[s,n("p",null,[n("a",l,[e("每一个添加到网页上的HTML元素在浏览器中都会呈现为一个盒子"),a(d)]),e("。例如，下面的图片似乎并不包含方框，而是由一个圆圈和文字组成。")]),g,n("p",null,[e("参见"),n("a",h,[e("CodePen"),a(d)]),e("上Didicodes"),n("a",u,[e("(@edyasikpo"),a(d)]),e(") 的Pen"),n("a",m,[a(d)]),e("Margin 1 (Margin vs. Padding 教程) 。")]),_,n("p",null,[e("请参阅"),n("a",k,[e("CodePen"),a(d)]),e("上Didicodes"),n("a",F,[e("(@edyasikpo"),a(d)]),e(") 的Pen"),n("a",f,[a(d)]),e("Margin 2 (Margin vs. Padding教程) 。")]),b,n("p",null,[e("参见"),n("a",S,[e("CodePen"),a(d)]),e("上Didicodes"),n("a",x,[e("(@edyasikpo"),a(d)]),e(") 的Pen"),n("a",j,[a(d)]),e("Padding 1 (CSS Margin vs. Padding 教程) 。")]),v,n("p",null,[e("请看"),n("a",y,[e("CodePen"),a(d)]),e("上Didicodes"),n("a",C,[e("(@edyasikpo"),a(d)]),e(") 的Pen"),n("a",M,[a(d)]),e("Padding 2 (CSS Margin vs. Padding 教程) 。")]),A,P,n("p",null,[e("尽管这两个"),n("a",L,[e("CSS属性"),a(d)]),e("很相似，而且经常被误认为可以互换使用，但它们还是有很大区别的，了解它们的区别对网页开发者来说是很有好处的。")]),E,n("p",null,[e("由于居中元素一直是网页开发人员难以理解或记住的（你可以从"),n("a",T,[e("网上关于居中div的有趣备忘录"),a(d)]),e("中看出），这个功能非常方便。")]),B,n("p",null,[e("参见"),n("a",H,[e("CodePen"),a(d)]),e("上Didicodes"),n("a",w,[e("(@edyasikpo"),a(d)]),e(")的Pen"),n("a",z,[a(d)]),e("Margin Auto (CSS Margin vs. Padding 教程) 。")]),D,I,n("p",null,[e("请看"),n("a",R,[e("CodePen"),a(d)]),e("上Didicodes"),n("a",N,[e("(@edyasikpo"),a(d)]),e(") 的Pen"),n("a",W,[a(d)]),e("重叠（CSS边距与填充教程）。")]),O,n("p",null,[e("请看"),n("a",V,[e("CodePen"),a(d)]),e("上Didicodes"),n("a",q,[e("(@edyasikpo"),a(d)]),e(") 的Pen"),n("a",Q,[a(d)]),e("忽略内联元素（CSS边距与填充教程） 。")]),Z])}const Y=i(c,[["render",G],["__file","3.html.vue"]]);export{Y as default};
