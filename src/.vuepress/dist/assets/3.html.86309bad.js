const e=JSON.parse('{"key":"v-2973fbb7","path":"/codenotes/Java/hm/3.html","title":"第三部分","lang":"zh-CN","frontmatter":{"title":"第三部分","icon":"code","category":["设计模式","后端"],"tag":["设计模式","后端"],"sticky":false,"star":true,"article":true,"timeline":true,"description":"5，结构型模式 结构型模式描述如何将类或对象按某种布局组成更大的结构。它分为类结构型模式和对象结构型模式，前者采用继承机制来组织接口和类，后者釆用组合或聚合来组合对象。 由于组合关系或聚合关系比继承关系耦合度低，满足“合成复用原则”，所以对象结构型模式比类结构型模式具有更大的灵活性。 结构型模式分为以下 7 种：\\r代理模式; \\r适配器模式; \\r装饰者模...","head":[["meta",{"property":"og:url","content":"https://mydocs.guoyaxue.top/codenotes/Java/hm/3.html"}],["meta",{"property":"og:site_name","content":"小uの学习笔记"}],["meta",{"property":"og:title","content":"第三部分"}],["meta",{"property":"og:description","content":"5，结构型模式 结构型模式描述如何将类或对象按某种布局组成更大的结构。它分为类结构型模式和对象结构型模式，前者采用继承机制来组织接口和类，后者釆用组合或聚合来组合对象。 由于组合关系或聚合关系比继承关系耦合度低，满足“合成复用原则”，所以对象结构型模式比类结构型模式具有更大的灵活性。 结构型模式分为以下 7 种：\\r代理模式; \\r适配器模式; \\r装饰者模..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-08-07T09:53:10.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:modified_time","content":"2023-08-07T09:53:10.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"5，结构型模式","slug":"_5-结构型模式","link":"#_5-结构型模式","children":[{"level":3,"title":"5.1 代理模式","slug":"_5-1-代理模式","link":"#_5-1-代理模式","children":[]},{"level":3,"title":"5.2 适配器模式","slug":"_5-2-适配器模式","link":"#_5-2-适配器模式","children":[]},{"level":3,"title":"5.3 装饰者模式","slug":"_5-3-装饰者模式","link":"#_5-3-装饰者模式","children":[]},{"level":3,"title":"5.4 桥接模式","slug":"_5-4-桥接模式","link":"#_5-4-桥接模式","children":[]},{"level":3,"title":"5.5 外观模式","slug":"_5-5-外观模式","link":"#_5-5-外观模式","children":[]}]}],"git":{"createdTime":1691401990000,"updatedTime":1691401990000,"contributors":[{"name":"Lenovo","email":"3153566913@qq.com","commits":1}]},"readingTime":{"minutes":25.94,"words":7782},"filePathRelative":"codenotes/Java/hm/3.md","localizedDate":"2023年8月7日"}');export{e as data};
