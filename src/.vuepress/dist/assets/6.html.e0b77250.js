const e=JSON.parse('{"key":"v-b75dcbda","path":"/interview/day/9/6.html","title":"9.6== 和 equals() 的区别","lang":"zh-CN","frontmatter":{"title":"9.6== 和 equals() 的区别","icon":"community","category":["面试"],"tag":["面试"],"sticky":false,"star":true,"article":true,"timeline":true,"description":"== 和 equals() 的区别 == 对于基本类型和引用类型的作用效果是不同的：\\r对于基本数据类型来说，== 比较的是值。; \\r对于引用数据类型来说，== 比较的是对象的内存地址。; \\r 因为 Java 只有值传递，所以，对于 == 来说，不管是比较基本数据类型，还是引用数据类型的变量，其本质比较的都是值，只是引用类型变量存的值是对象的地址。 eq...","head":[["meta",{"property":"og:url","content":"https://mydocs.guoyaxue.top/interview/day/9/6.html"}],["meta",{"property":"og:site_name","content":"小uの学习笔记"}],["meta",{"property":"og:title","content":"9.6== 和 equals() 的区别"}],["meta",{"property":"og:description","content":"== 和 equals() 的区别 == 对于基本类型和引用类型的作用效果是不同的：\\r对于基本数据类型来说，== 比较的是值。; \\r对于引用数据类型来说，== 比较的是对象的内存地址。; \\r 因为 Java 只有值传递，所以，对于 == 来说，不管是比较基本数据类型，还是引用数据类型的变量，其本质比较的都是值，只是引用类型变量存的值是对象的地址。 eq..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-09-06T05:08:03.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:modified_time","content":"2023-09-06T05:08:03.000Z"}]]},"excerpt":"","headers":[{"level":3,"title":"== 和 equals() 的区别","slug":"和-equals-的区别","link":"#和-equals-的区别","children":[]}],"git":{"createdTime":1693976883000,"updatedTime":1693976883000,"contributors":[{"name":"李子凡","email":"3153566913@qq.com","commits":1}]},"readingTime":{"minutes":2.3,"words":691},"filePathRelative":"interview/day/9/6.md","localizedDate":"2023年9月6日"}');export{e as data};
