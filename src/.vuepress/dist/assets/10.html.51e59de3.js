const e=JSON.parse('{"key":"v-63f4ed75","path":"/codenotes/Java/jvm2/10.html","title":"类加载器","lang":"zh-CN","frontmatter":{"title":"类加载器","icon":"code","category":["JVM"],"tag":["JVM"],"sticky":false,"star":true,"article":true,"timeline":true,"description":"类与类加载器 判断类是否“相等” 任意一个类，都由加载它的类加载器和这个类本身一同确立其在 Java 虚拟机中的唯一性，每一个类加载器，都有一个独立的类名称空间。 因此，比较两个类是否“相等”，只有在这两个类是由同一个类加载器加载的前提下才有意义，否则，即使这两个类来源于同一个 Class 文件，被同一个虚拟机加载，只要加载它们的类加载器不同，那么这两...","head":[["meta",{"property":"og:url","content":"https://mydocs.guoyaxue.top/codenotes/Java/jvm2/10.html"}],["meta",{"property":"og:site_name","content":"小uの学习笔记"}],["meta",{"property":"og:title","content":"类加载器"}],["meta",{"property":"og:description","content":"类与类加载器 判断类是否“相等” 任意一个类，都由加载它的类加载器和这个类本身一同确立其在 Java 虚拟机中的唯一性，每一个类加载器，都有一个独立的类名称空间。 因此，比较两个类是否“相等”，只有在这两个类是由同一个类加载器加载的前提下才有意义，否则，即使这两个类来源于同一个 Class 文件，被同一个虚拟机加载，只要加载它们的类加载器不同，那么这两..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-08-12T11:58:57.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"JVM"}],["meta",{"property":"article:modified_time","content":"2023-08-12T11:58:57.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"类与类加载器","slug":"类与类加载器","link":"#类与类加载器","children":[{"level":3,"title":"判断类是否“相等”","slug":"判断类是否-相等","link":"#判断类是否-相等","children":[]},{"level":3,"title":"加载器种类","slug":"加载器种类","link":"#加载器种类","children":[]}]},{"level":2,"title":"双亲委派模型","slug":"双亲委派模型","link":"#双亲委派模型","children":[{"level":3,"title":"什么是双亲委派模型","slug":"什么是双亲委派模型","link":"#什么是双亲委派模型","children":[]},{"level":3,"title":"工作过程","slug":"工作过程","link":"#工作过程","children":[]},{"level":3,"title":"为什么使用双亲委派模型","slug":"为什么使用双亲委派模型","link":"#为什么使用双亲委派模型","children":[]}]}],"git":{"createdTime":1691841537000,"updatedTime":1691841537000,"contributors":[{"name":"Lenovo","email":"3153566913@qq.com","commits":1}]},"readingTime":{"minutes":3.27,"words":982},"filePathRelative":"codenotes/Java/jvm2/10.md","localizedDate":"2023年8月12日"}');export{e as data};
