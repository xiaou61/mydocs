import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as t}from"./app.c5b3201b.js";const p={},l=t(`<h2 id="字面量" tabindex="-1"><a class="header-anchor" href="#字面量" aria-hidden="true">#</a> 字面量</h2><ul><li>字面量（literal）是用于表达一个固定值的表示法，又叫常量</li><li>通俗的理解，字面就是所见即所得，js 程序执行到代码中的字面量，会立即知道它是什么类型的数据，值是多少</li><li>可以用于表示固定值，比如：数字、字符串、undefined、布尔类型的字面值等</li></ul><h2 id="_1、数字字面量" tabindex="-1"><a class="header-anchor" href="#_1、数字字面量" aria-hidden="true">#</a> 1、数字字面量</h2><ul><li>就是数学意义上的数字</li><li>数字字面量区分：整数字面量、浮点数字面量（小数）、特殊值</li><li>书写时直接书写字面量，不需要添加任何辅助符号</li></ul><h3 id="_1、整数" tabindex="-1"><a class="header-anchor" href="#_1、整数" aria-hidden="true">#</a> <strong>①、整数</strong></h3><ul><li>整数字面量写法区分进制</li><li>整数可以被表示成十进制（基数为10）、八进制（基数为8）以及十六进制（基数为16）</li><li>十进制是最基本的数值字面量格式，可以直接在代码中输入</li><li>八进制字面值必须带前导0、0O、0o 。八进制整数只能包括数字0-7</li><li>十六进制的前缀是0x或0X。后面可以包含数字（0-9）和字母a<sub>f或A</sub>F</li><li>在进行算术计算时或者参与程序，所有八进制和十六进制的数字都会被转换成十进制</li></ul><p><strong>整数的进制</strong></p><ul><li>十进制：逢十进一，每个位数只能是0-9之间的数字</li><li>八进制：逢八进一，每个位数上只能是0-7之间的数字，而且必须添加前缀，0、0O、0o</li><li>十六进制：逢十六进一，每个位数上必须是0-9、a-f之间的符号，必须写前缀，0x、0X开头</li><li>八进制中，如果以0开头，每个位数上有超过0-7之间的数字出现，也就是8/9，强制忽视前面的0，直接将后面数字当做十进制</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// 整数字面量</span>

    <span class="token comment">// 十进制</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span>

    <span class="token comment">// 自己要知道转换成十进制是多少</span>
    <span class="token comment">// 八进制</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">01</span><span class="token punctuation">)</span> <span class="token comment">// 8</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0100</span><span class="token punctuation">)</span> <span class="token comment">// 8*8 </span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">01000</span><span class="token punctuation">)</span> <span class="token comment">// 8*8*8</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0o100</span><span class="token punctuation">)</span>
    <span class="token comment">// 特殊情况</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">089</span><span class="token punctuation">)</span>
    <span class="token comment">// console.log(0o89) 语法错误 </span>

    <span class="token comment">// 十六进制</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0x1</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0x10</span><span class="token punctuation">)</span> <span class="token comment">// 16</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0x100</span><span class="token punctuation">)</span> <span class="token comment">// 16*16</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0x110</span><span class="token punctuation">)</span>  <span class="token comment">// 16*16+16</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、浮点数" tabindex="-1"><a class="header-anchor" href="#_2、浮点数" aria-hidden="true">#</a> ②、浮点数</h3><ul><li>数学概念中的小数</li><li>包含：整数、小数点、小数部分</li><li>浮点数不区分进制，所有的浮点数都是十进制下的数字</li><li>注意：如果浮点数是大于0 小于1的，可以省略小数点前面的0不写</li></ul><p><strong>浮点数的精度问题</strong></p><ul><li>浮点数值的最高精度是 17 位小数，但在进行算术计算时其精确度远远不如整数</li><li>例如：0.1 + 0.2; 结果不是 0.3，而是：0.30000000000000004</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// 浮点数字面量</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1.23</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.23</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0.123</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">.123</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1.23e3</span><span class="token punctuation">)</span> <span class="token comment">// 科学(e)技术法</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1.23e-3</span><span class="token punctuation">)</span> 
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、infinity-无穷" tabindex="-1"><a class="header-anchor" href="#_3、infinity-无穷" aria-hidden="true">#</a> ③、Infinity 无穷</h3><ul><li>Infinity：无穷的意思</li><li>由于计算机计算能力有限，如果高于最大计算值直接显示为正无穷 Infinity，如果低于最小 计算值直接显示为 -Infinity</li><li>Infinity 本身就是一个数字</li></ul><p>- 最小值：Number.MIN_VALUE，这个值为： 5e-324</p><p>- 最大值：Number.MAX_VALUE，这个值为： 1.7976931348623157e+308</p><p>- 无穷大：Infinity</p><p>- 无穷小：-Infinity</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// Infinity 无穷</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5e789</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5e789</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、nan" tabindex="-1"><a class="header-anchor" href="#_4、nan" aria-hidden="true">#</a> ④、NaN</h3><ul><li>NaN：(not a number)表示不是一个正常的数，但是还是一个 Number 类型的数字，这个数字没办法用前面的表示方法表示</li><li>NaN 与任何值都不相等，包括他本身</li><li>isNaN(): 判断一个数据是不是一个NaN，是返回 true，否返回false</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// NaN 不是一个正常的数</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="_2、字符串字面量" tabindex="-1"><a class="header-anchor" href="#_2、字符串字面量" aria-hidden="true">#</a> 2、字符串字面量</h2><ul><li>字符串是由任意个数的有序或无序的字符组成的串，类似人类的语言，在 JS 中有自己特殊 的写法</li><li>组成：字母、汉字、特殊符号、空白等</li><li>字符串字面量写法：是用一对单引号（&#39; &#39;）或双引号（“ ”）及引号内的字符构成，引号中间的字符可以有任意多个，也可以是没有字符的空字符串</li><li>注意：字符串中如果字符包含了双引号，则其外部应该由单引号标示，反之相同</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// 字符串字面量</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;这是一个字符串#&amp;*&quot;</span><span class="token punctuation">)</span>
    <span class="token comment">// console.log(&quot;这是一个&quot;字符串&quot;#&amp;*&quot;) 语法错误</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;这是一个&#39;字符串&#39;#&amp;*&quot;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;a&quot;b&quot;c&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;        &#39;</span><span class="token punctuation">)</span> <span class="token comment">// 空白字符串</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 空字符串</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1、转义符号" tabindex="-1"><a class="header-anchor" href="#_1、转义符号" aria-hidden="true">#</a> ①、转义符号 \\</h3><ul><li><p>字符串中，有一些特殊功能的字符不能直接书写，还有一些特殊效果不能直接书写</p></li><li><p>这时，可以使用转义符 \\ 对这些字符进行转义</p></li><li><p>在字符串中可以使用转义符 \\ 加普通字母，替代一些特殊字符</p></li><li><ul><li>\\n 换行</li><li>\\t Tab制表</li></ul></li><li><p>字符串中可以使用转义符 \\ 将特殊功能字符变为普通字符</p></li><li><ul><li>&#39; 单引号</li><li>&quot; 双引号</li><li>\\ 反斜杠</li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">// 转义符</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;这是第一行文字\\n这是第二行文字\\n\\t这是第三行文字&quot;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;这是一个\\&quot;字符串\\&quot;#&amp;*&quot;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\Users\\Administrator&quot;</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;C:\\\\Users\\\\Administrator&quot;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31),o=[l];function e(c,i){return s(),a("div",null,o)}const r=n(p,[["render",e],["__file","15.html.vue"]]);export{r as default};
