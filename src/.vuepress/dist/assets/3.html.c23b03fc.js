const l=JSON.parse('{"key":"v-35c7d513","path":"/interview/selected/3.html","title":"精选数据库60道面试题必看","lang":"zh-CN","frontmatter":{"title":"精选数据库60道面试题必看","icon":"community","category":["面试"],"tag":["面试"],"sticky":false,"star":true,"article":true,"timeline":true,"description":"基础 1、关系型和非关系型数据库的区别？ 关系型数据库的优点 容易理解，因为它采用了关系模型来组织数据。; 可以保持数据的一致性。; 数据更新的开销比较小。; 支持复杂查询（带 where 子句的查询）; 非关系型数据库（NOSQL）的优点 无需经过 SQL 层的解析，读写效率高。; 基于键值对，读写性能很高，易于扩展; 可以支持多种类型数据的存储，如...","head":[["meta",{"property":"og:url","content":"https://mydocs.guoyaxue.top/interview/selected/3.html"}],["meta",{"property":"og:site_name","content":"小uの学习笔记"}],["meta",{"property":"og:title","content":"精选数据库60道面试题必看"}],["meta",{"property":"og:description","content":"基础 1、关系型和非关系型数据库的区别？ 关系型数据库的优点 容易理解，因为它采用了关系模型来组织数据。; 可以保持数据的一致性。; 数据更新的开销比较小。; 支持复杂查询（带 where 子句的查询）; 非关系型数据库（NOSQL）的优点 无需经过 SQL 层的解析，读写效率高。; 基于键值对，读写性能很高，易于扩展; 可以支持多种类型数据的存储，如..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-08-08T04:27:39.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"面试"}],["meta",{"property":"article:modified_time","content":"2023-08-08T04:27:39.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[{"level":3,"title":"1、关系型和非关系型数据库的区别？","slug":"_1、关系型和非关系型数据库的区别","link":"#_1、关系型和非关系型数据库的区别","children":[]},{"level":3,"title":"2、详细说一下一条 MySQL 语句执行的步骤","slug":"_2、详细说一下一条-mysql-语句执行的步骤","link":"#_2、详细说一下一条-mysql-语句执行的步骤","children":[]}]},{"level":2,"title":"索引相关","slug":"索引相关","link":"#索引相关","children":[{"level":3,"title":"3、MySQL 使用索引的原因？","slug":"_3、mysql-使用索引的原因","link":"#_3、mysql-使用索引的原因","children":[]},{"level":3,"title":"4、索引的三种常见底层数据结构以及优缺点","slug":"_4、索引的三种常见底层数据结构以及优缺点","link":"#_4、索引的三种常见底层数据结构以及优缺点","children":[]},{"level":3,"title":"5、索引的常见类型以及它是如何发挥作用的？","slug":"_5、索引的常见类型以及它是如何发挥作用的","link":"#_5、索引的常见类型以及它是如何发挥作用的","children":[]},{"level":3,"title":"6、MyISAM 和 InnoDB 实现 B 树索引方式的区别是什么？","slug":"_6、myisam-和-innodb-实现-b-树索引方式的区别是什么","link":"#_6、myisam-和-innodb-实现-b-树索引方式的区别是什么","children":[]},{"level":3,"title":"7、InnoDB 为什么设计 B+ 树索引？","slug":"_7、innodb-为什么设计-b-树索引","link":"#_7、innodb-为什么设计-b-树索引","children":[]},{"level":3,"title":"8、什么是覆盖索引和索引下推？","slug":"_8、什么是覆盖索引和索引下推","link":"#_8、什么是覆盖索引和索引下推","children":[]},{"level":3,"title":"9、哪些操作会导致索引失效？","slug":"_9、哪些操作会导致索引失效","link":"#_9、哪些操作会导致索引失效","children":[]},{"level":3,"title":"10、字符串加索引","slug":"_10、字符串加索引","link":"#_10、字符串加索引","children":[]}]},{"level":2,"title":"日志相关","slug":"日志相关","link":"#日志相关","children":[{"level":3,"title":"11、MySQL 的 change buffer 是什么？","slug":"_11、mysql-的-change-buffer-是什么","link":"#_11、mysql-的-change-buffer-是什么","children":[]},{"level":3,"title":"12、MySQL 是如何判断一行扫描数的？","slug":"_12、mysql-是如何判断一行扫描数的","link":"#_12、mysql-是如何判断一行扫描数的","children":[]},{"level":3,"title":"13、MySQL 的 redo log 和 binlog 区别？","slug":"_13、mysql-的-redo-log-和-binlog-区别","link":"#_13、mysql-的-redo-log-和-binlog-区别","children":[]},{"level":3,"title":"14、为什么需要 redo log？","slug":"_14、为什么需要-redo-log","link":"#_14、为什么需要-redo-log","children":[]},{"level":3,"title":"15、为什么 redo log 具有 crash-safe 的能力，是 binlog 无法替代的？","slug":"_15、为什么-redo-log-具有-crash-safe-的能力-是-binlog-无法替代的","link":"#_15、为什么-redo-log-具有-crash-safe-的能力-是-binlog-无法替代的","children":[]},{"level":3,"title":"16、当数据库 crash 后，如何恢复未刷盘的数据到内存中？","slug":"_16、当数据库-crash-后-如何恢复未刷盘的数据到内存中","link":"#_16、当数据库-crash-后-如何恢复未刷盘的数据到内存中","children":[]},{"level":3,"title":"17、redo log 写入方式？","slug":"_17、redo-log-写入方式","link":"#_17、redo-log-写入方式","children":[]},{"level":3,"title":"18、redo log 的执行流程?","slug":"_18、redo-log-的执行流程","link":"#_18、redo-log-的执行流程","children":[]},{"level":3,"title":"19、binlog 的概念是什么，起到什么作用， 可以保证 crash-safe 吗?","slug":"_19、binlog-的概念是什么-起到什么作用-可以保证-crash-safe-吗","link":"#_19、binlog-的概念是什么-起到什么作用-可以保证-crash-safe-吗","children":[]},{"level":3,"title":"20、什么是两阶段提交？","slug":"_20、什么是两阶段提交","link":"#_20、什么是两阶段提交","children":[]},{"level":3,"title":"21、MySQL 怎么知道 binlog 是完整的?","slug":"_21、mysql-怎么知道-binlog-是完整的","link":"#_21、mysql-怎么知道-binlog-是完整的","children":[]},{"level":3,"title":"22、什么是 WAL 技术，有什么优点？","slug":"_22、什么是-wal-技术-有什么优点","link":"#_22、什么是-wal-技术-有什么优点","children":[]},{"level":3,"title":"23、binlog 日志的三种格式","slug":"_23、binlog-日志的三种格式","link":"#_23、binlog-日志的三种格式","children":[]},{"level":3,"title":"24、redo log日志格式","slug":"_24、redo-log日志格式","link":"#_24、redo-log日志格式","children":[]},{"level":3,"title":"25、原本可以执行得很快的 SQL 语句，执行速度却比预期的慢很多，原因是什么？如何解决？","slug":"_25、原本可以执行得很快的-sql-语句-执行速度却比预期的慢很多-原因是什么-如何解决","link":"#_25、原本可以执行得很快的-sql-语句-执行速度却比预期的慢很多-原因是什么-如何解决","children":[]},{"level":3,"title":"26、InnoDB 数据页结构","slug":"_26、innodb-数据页结构","link":"#_26、innodb-数据页结构","children":[]}]},{"level":2,"title":"数据相关","slug":"数据相关","link":"#数据相关","children":[{"level":3,"title":"27、MySQL 是如何保证数据不丢失的？","slug":"_27、mysql-是如何保证数据不丢失的","link":"#_27、mysql-是如何保证数据不丢失的","children":[]},{"level":3,"title":"28、误删数据怎么办？","slug":"_28、误删数据怎么办","link":"#_28、误删数据怎么办","children":[]},{"level":3,"title":"29、drop、truncate 和 delete 的区别","slug":"_29、drop、truncate-和-delete-的区别","link":"#_29、drop、truncate-和-delete-的区别","children":[]},{"level":3,"title":"30、在 MySQL 中有两个 kill 命令","slug":"_30、在-mysql-中有两个-kill-命令","link":"#_30、在-mysql-中有两个-kill-命令","children":[]},{"level":3,"title":"31、如何理解 MySQL 的边读边发","slug":"_31、如何理解-mysql-的边读边发","link":"#_31、如何理解-mysql-的边读边发","children":[]},{"level":3,"title":"32、MySQL 的大表查询为什么不会爆内存？","slug":"_32、mysql-的大表查询为什么不会爆内存","link":"#_32、mysql-的大表查询为什么不会爆内存","children":[]},{"level":3,"title":"33、MySQL 临时表的用法和特性","slug":"_33、mysql-临时表的用法和特性","link":"#_33、mysql-临时表的用法和特性","children":[]},{"level":3,"title":"34、MySQL 存储引擎介绍（InnoDB、MyISAM、MEMORY）","slug":"_34、mysql-存储引擎介绍-innodb、myisam、memory","link":"#_34、mysql-存储引擎介绍-innodb、myisam、memory","children":[]},{"level":3,"title":"35、都说 InnoDB 好，那还要不要使用 MEMORY 引擎？","slug":"_35、都说-innodb-好-那还要不要使用-memory-引擎","link":"#_35、都说-innodb-好-那还要不要使用-memory-引擎","children":[]},{"level":3,"title":"36、如果数据库误操作, 如何执行数据恢复?","slug":"_36、如果数据库误操作-如何执行数据恢复","link":"#_36、如果数据库误操作-如何执行数据恢复","children":[]}]},{"level":2,"title":"主从备份相关","slug":"主从备份相关","link":"#主从备份相关","children":[{"level":3,"title":"37、MySQL 是如何保证主备同步？","slug":"_37、mysql-是如何保证主备同步","link":"#_37、mysql-是如何保证主备同步","children":[]},{"level":3,"title":"38、什么是主备延迟","slug":"_38、什么是主备延迟","link":"#_38、什么是主备延迟","children":[]},{"level":3,"title":"39、为什么要有多线程复制策略？","slug":"_39、为什么要有多线程复制策略","link":"#_39、为什么要有多线程复制策略","children":[]},{"level":3,"title":"40、MySQL 的并行策略有哪些？","slug":"_40、mysql-的并行策略有哪些","link":"#_40、mysql-的并行策略有哪些","children":[]},{"level":3,"title":"41、MySQL的一主一备和一主多从有什么区别？","slug":"_41、mysql的一主一备和一主多从有什么区别","link":"#_41、mysql的一主一备和一主多从有什么区别","children":[]},{"level":3,"title":"42、主库出问题如何解决?","slug":"_42、主库出问题如何解决","link":"#_42、主库出问题如何解决","children":[]},{"level":3,"title":"43、MySQL 读写分离涉及到过期读问题的几种解决方案?","slug":"_43、mysql-读写分离涉及到过期读问题的几种解决方案","link":"#_43、mysql-读写分离涉及到过期读问题的几种解决方案","children":[]},{"level":3,"title":"44、MySQL的并发链接和并发查询有什么区别？","slug":"_44、mysql的并发链接和并发查询有什么区别","link":"#_44、mysql的并发链接和并发查询有什么区别","children":[]}]},{"level":2,"title":"性能相关","slug":"性能相关","link":"#性能相关","children":[{"level":3,"title":"45、短时间提高 MySQL 性能的方法","slug":"_45、短时间提高-mysql-性能的方法","link":"#_45、短时间提高-mysql-性能的方法","children":[]},{"level":3,"title":"46、为什么 MySQL 自增主键 ID 不连续？","slug":"_46、为什么-mysql-自增主键-id-不连续","link":"#_46、为什么-mysql-自增主键-id-不连续","children":[]},{"level":3,"title":"47、InnoDB 为什么要用自增 ID 作为主键？","slug":"_47、innodb-为什么要用自增-id-作为主键","link":"#_47、innodb-为什么要用自增-id-作为主键","children":[]},{"level":3,"title":"48、如何最快的复制一张表？","slug":"_48、如何最快的复制一张表","link":"#_48、如何最快的复制一张表","children":[]},{"level":3,"title":"49、grant 和 flush privileges语句","slug":"_49、grant-和-flush-privileges语句","link":"#_49、grant-和-flush-privileges语句","children":[]},{"level":3,"title":"50、要不要使用分区表？","slug":"_50、要不要使用分区表","link":"#_50、要不要使用分区表","children":[]},{"level":3,"title":"51、join 用法","slug":"_51、join-用法","link":"#_51、join-用法","children":[]},{"level":3,"title":"52、MySQL 有哪些自增ID？各自场景是什么？","slug":"_52、mysql-有哪些自增id-各自场景是什么","link":"#_52、mysql-有哪些自增id-各自场景是什么","children":[]},{"level":3,"title":"53、Xid 在 MySQL 内部是怎么生成的呢？","slug":"_53、xid-在-mysql-内部是怎么生成的呢","link":"#_53、xid-在-mysql-内部是怎么生成的呢","children":[]}]},{"level":2,"title":"锁相关","slug":"锁相关","link":"#锁相关","children":[{"level":3,"title":"54、说一下 MySQL 的锁","slug":"_54、说一下-mysql-的锁","link":"#_54、说一下-mysql-的锁","children":[]},{"level":3,"title":"55、什么是幻读？","slug":"_55、什么是幻读","link":"#_55、什么是幻读","children":[]}]},{"level":2,"title":"其它为什么系列","slug":"其它为什么系列","link":"#其它为什么系列","children":[{"level":3,"title":"56、为什么 MySQL 会抖一下？","slug":"_56、为什么-mysql-会抖一下","link":"#_56、为什么-mysql-会抖一下","children":[]},{"level":3,"title":"57、为什么删除了表，表文件的大小还是没变？","slug":"_57、为什么删除了表-表文件的大小还是没变","link":"#_57、为什么删除了表-表文件的大小还是没变","children":[]},{"level":3,"title":"58、count(*)实现方式以及各种 count 对比","slug":"_58、count-实现方式以及各种-count-对比","link":"#_58、count-实现方式以及各种-count-对比","children":[]},{"level":3,"title":"59、orderby 排序内部原理","slug":"_59、orderby-排序内部原理","link":"#_59、orderby-排序内部原理","children":[]},{"level":3,"title":"60、如何高效的使用 MySQL 显式随机消息","slug":"_60、如何高效的使用-mysql-显式随机消息","link":"#_60、如何高效的使用-mysql-显式随机消息","children":[]}]}],"git":{"createdTime":1691468859000,"updatedTime":1691468859000,"contributors":[{"name":"Lenovo","email":"3153566913@qq.com","commits":1}]},"readingTime":{"minutes":36.94,"words":11081},"filePathRelative":"interview/selected/3.md","localizedDate":"2023年8月8日"}');export{l as data};
