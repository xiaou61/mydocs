const e=JSON.parse('{"key":"v-260a4a79","path":"/codenotes/Java/hm/1.html","title":"第一部分","lang":"zh-CN","frontmatter":{"title":"第一部分","icon":"code","category":["设计模式","后端"],"tag":["设计模式","后端"],"sticky":false,"star":true,"article":true,"timeline":true,"description":"1，设计模式概述 1.1 软件设计模式的产生背景 \\"设计模式\\"最初并不是出现在软件设计中，而是被用于建筑领域的设计中。 1977年美国著名建筑大师、加利福尼亚大学伯克利分校环境结构中心主任克里斯托夫·亚历山大（Christopher Alexander）在他的著作《建筑模式语言：城镇、建筑、构造》中描述了一些常见的建筑设计问题，并提出了 253 种关于...","head":[["meta",{"property":"og:url","content":"https://mydocs.guoyaxue.top/codenotes/Java/hm/1.html"}],["meta",{"property":"og:site_name","content":"小uの学习笔记"}],["meta",{"property":"og:title","content":"第一部分"}],["meta",{"property":"og:description","content":"1，设计模式概述 1.1 软件设计模式的产生背景 \\"设计模式\\"最初并不是出现在软件设计中，而是被用于建筑领域的设计中。 1977年美国著名建筑大师、加利福尼亚大学伯克利分校环境结构中心主任克里斯托夫·亚历山大（Christopher Alexander）在他的著作《建筑模式语言：城镇、建筑、构造》中描述了一些常见的建筑设计问题，并提出了 253 种关于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-08-07T09:53:10.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"设计模式"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:modified_time","content":"2023-08-07T09:53:10.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"1，设计模式概述","slug":"_1-设计模式概述","link":"#_1-设计模式概述","children":[{"level":3,"title":"1.1 软件设计模式的产生背景","slug":"_1-1-软件设计模式的产生背景","link":"#_1-1-软件设计模式的产生背景","children":[]},{"level":3,"title":"1.2 软件设计模式的概念","slug":"_1-2-软件设计模式的概念","link":"#_1-2-软件设计模式的概念","children":[]},{"level":3,"title":"1.3 学习设计模式的必要性","slug":"_1-3-学习设计模式的必要性","link":"#_1-3-学习设计模式的必要性","children":[]},{"level":3,"title":"1.4 设计模式分类","slug":"_1-4-设计模式分类","link":"#_1-4-设计模式分类","children":[]}]},{"level":2,"title":"2，UML图","slug":"_2-uml图","link":"#_2-uml图","children":[{"level":3,"title":"2.1 类图概述","slug":"_2-1-类图概述","link":"#_2-1-类图概述","children":[]},{"level":3,"title":"2.2 类图的作用","slug":"_2-2-类图的作用","link":"#_2-2-类图的作用","children":[]},{"level":3,"title":"2.3 类图表示法","slug":"_2-3-类图表示法","link":"#_2-3-类图表示法","children":[]}]},{"level":2,"title":"3，软件设计原则","slug":"_3-软件设计原则","link":"#_3-软件设计原则","children":[{"level":3,"title":"3.1 开闭原则","slug":"_3-1-开闭原则","link":"#_3-1-开闭原则","children":[]},{"level":3,"title":"3.2 里氏代换原则","slug":"_3-2-里氏代换原则","link":"#_3-2-里氏代换原则","children":[]},{"level":3,"title":"3.3 依赖倒转原则","slug":"_3-3-依赖倒转原则","link":"#_3-3-依赖倒转原则","children":[]},{"level":3,"title":"3.4 接口隔离原则","slug":"_3-4-接口隔离原则","link":"#_3-4-接口隔离原则","children":[]},{"level":3,"title":"3.5 迪米特法则","slug":"_3-5-迪米特法则","link":"#_3-5-迪米特法则","children":[]},{"level":3,"title":"3.6 合成复用原则","slug":"_3-6-合成复用原则","link":"#_3-6-合成复用原则","children":[]}]},{"level":2,"title":"4，创建者模式","slug":"_4-创建者模式","link":"#_4-创建者模式","children":[{"level":3,"title":"4.1 单例设计模式","slug":"_4-1-单例设计模式","link":"#_4-1-单例设计模式","children":[]}]}],"git":{"createdTime":1691401990000,"updatedTime":1691401990000,"contributors":[{"name":"Lenovo","email":"3153566913@qq.com","commits":1}]},"readingTime":{"minutes":30.56,"words":9167},"filePathRelative":"codenotes/Java/hm/1.md","localizedDate":"2023年8月7日"}');export{e as data};
