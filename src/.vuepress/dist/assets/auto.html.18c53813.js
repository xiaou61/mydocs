import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{r as e,o,c,a as n,b as s,d as l,e as a}from"./app.c5b3201b.js";const i={},u=a(`<h1 id="文件夹系列" tabindex="-1"><a class="header-anchor" href="#文件夹系列" aria-hidden="true">#</a> 文件夹系列</h1><h2 id="_1-在某个文件目录下-找到某个文件" tabindex="-1"><a class="header-anchor" href="#_1-在某个文件目录下-找到某个文件" aria-hidden="true">#</a> 1.在某个文件目录下，找到某个文件</h2><h3 id="非递归" tabindex="-1"><a class="header-anchor" href="#非递归" aria-hidden="true">#</a> 非递归</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 连续在res⽂件夹内查找某个⽂件</span>
<span class="token keyword">import</span> os
<span class="token comment"># 获取当前路径</span>
cur_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 获取当前路径⽗⽬录</span>
parent_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>cur_dir<span class="token punctuation">)</span>
<span class="token comment"># 定位到res⽂件夹</span>
find_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>parent_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>
    find_file_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;请提示你想在</span><span class="token interpolation"><span class="token punctuation">{</span>find_path<span class="token punctuation">}</span></span><span class="token string">中查找的文件名(q退出)\\n&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> find_file_name<span class="token operator">==</span><span class="token string">&#39;q&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span>

    file_exists<span class="token operator">=</span><span class="token boolean">False</span> <span class="token comment">#表示是否存在</span>
    <span class="token keyword">for</span> item <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>find_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> item<span class="token operator">==</span>find_file_name<span class="token punctuation">:</span>
            file_exists<span class="token operator">=</span><span class="token boolean">True</span>
            <span class="token keyword">break</span>

    <span class="token keyword">if</span> file_exists<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;文件找到&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="递归" tabindex="-1"><a class="header-anchor" href="#递归" aria-hidden="true">#</a> 递归</h3><p>这个是能查到所有的目录</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 连续在res⽂件夹内查找某个⽂件</span>
<span class="token keyword">import</span> os

<span class="token comment"># 获取当前路径</span>
cur_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 获取当前路径⽗⽬录</span>
parent_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>cur_dir<span class="token punctuation">)</span>
<span class="token comment"># 定位到res⽂件夹</span>
find_path<span class="token punctuation">,</span> file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>parent_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span>

<span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>
    find_file_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;请提示你想在</span><span class="token interpolation"><span class="token punctuation">{</span>find_path<span class="token punctuation">}</span></span><span class="token string">中查找的文件名(q退出)\\n&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> find_file_name <span class="token operator">==</span> <span class="token string">&#39;q&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span>
    file_exists <span class="token operator">=</span> <span class="token boolean">False</span>  <span class="token comment"># 表示是否存在</span>

    <span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>find_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> item <span class="token keyword">in</span> files<span class="token punctuation">:</span>
            <span class="token keyword">if</span> item <span class="token operator">==</span> find_file_name<span class="token punctuation">:</span>
                file_exists <span class="token operator">=</span> <span class="token boolean">True</span>
                file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> item<span class="token punctuation">)</span>
                <span class="token keyword">break</span>
    <span class="token keyword">if</span> file_exists<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;文件找到&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;没有找到&quot;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-根据文件后缀名查找文件" tabindex="-1"><a class="header-anchor" href="#_3-根据文件后缀名查找文件" aria-hidden="true">#</a> 3 根据⽂件后缀名查找⽂件</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#  第⼀件事情， os.path.splitext() 中传⼊ item （⽂件名是 **.&amp;&amp;&amp; 】）</span>
<span class="token comment">#  这时，返回的结果是列表： [&quot;**&quot;, &quot;.&amp;&amp;&amp;&quot;]</span>
<span class="token comment"># [1] 表示选择上⾯列表中，下标为 1 的元素，即选出 &quot;.&amp;&amp;&amp;&quot;</span>
<span class="token comment">#  第三件事情， lower() 函数将 &quot;.&amp;&amp;&amp;&quot; 中的⼤写英⽂字⺟统⼀转为⼩写</span>
<span class="token comment">#  这时的 extension 赋值的结果为 &quot;.docx&quot; ，字⺟是⼩写</span>
<span class="token keyword">import</span> os
<span class="token comment">#  获取当前路径</span>
cur_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#  获取当前路径⽗⽬录</span>
parent_dir <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>cur_dir<span class="token punctuation">)</span>
extension_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>f&quot;你想要查找哪写后缀名⽂件，不同⽂件类型间⽤<span class="token punctuation">,</span>隔开（如xlsx<span class="token punctuation">,</span>mp3等
tmp_extensions <span class="token operator">=</span> extension_name<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
extensions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> item <span class="token keyword">for</span> item <span class="token keyword">in</span> tmp_extensions<span class="token punctuation">]</span>
found_files_count <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">for</span> item <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>parent_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
extension <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> extension <span class="token keyword">in</span> extensions<span class="token punctuation">:</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;【找到⽂件】&quot;</span></span> <span class="token operator">+</span> item<span class="token punctuation">)</span>
found_files_count <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;⼀共有</span><span class="token interpolation"><span class="token punctuation">{</span>found_files_count<span class="token punctuation">}</span></span><span class="token string">个⽂件&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-递归移动到文件" tabindex="-1"><a class="header-anchor" href="#_4-递归移动到文件" aria-hidden="true">#</a> 4 递归移动到⽂件</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">import</span> shutil
source_folder_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输⼊想要操作的⽂件夹：&quot;</span><span class="token punctuation">)</span>
file_extension <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输⼊想要复制⽂件后缀(格式为xlsx等)&quot;</span><span class="token punctuation">)</span>
target_folder <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输⼊移动到⽂件夹名称&quot;</span><span class="token punctuation">)</span>
mv_files <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> root<span class="token punctuation">,</span> folders<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>source_folder_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">for</span> cur_file <span class="token keyword">in</span> files<span class="token punctuation">:</span>
<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>cur_file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> file_extension<span class="token punctuation">:</span>
mv_files<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> cur_file<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#  剪切这些⽂件</span>
<span class="token keyword">if</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;你确定要移动吗？(y/n)&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">:</span>
<span class="token keyword">for</span> cp_file <span class="token keyword">in</span> mv_files<span class="token punctuation">:</span>
<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>target_folder<span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>cp_file
<span class="token keyword">continue</span>
shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span>cp_file<span class="token punctuation">,</span> target_folder<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Done&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-递归复制文件" tabindex="-1"><a class="header-anchor" href="#_5-递归复制文件" aria-hidden="true">#</a> 5 递归复制⽂件</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">import</span> shutil
source_folder_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输⼊想要操作的⽂件夹：&quot;</span><span class="token punctuation">)</span>
file_extension <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输⼊想要复制⽂件后缀(格式为xlsx等)&quot;</span><span class="token punctuation">)</span>
target_folder <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输⼊复制到⽂件夹名称&quot;</span><span class="token punctuation">)</span>
cp_files <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> root<span class="token punctuation">,</span> folders<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>source_folder_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">for</span> cur_file <span class="token keyword">in</span> files<span class="token punctuation">:</span>
<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>cur_file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> file_extension<span class="token punctuation">:</span>
cp_files<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> cur_file<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#  复制这些⽂件</span>
<span class="token keyword">for</span> cp_file <span class="token keyword">in</span> cp_files<span class="token punctuation">:</span>
shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>cp_file<span class="token punctuation">,</span> target_folder<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Done&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-递归删除" tabindex="-1"><a class="header-anchor" href="#_6-递归删除" aria-hidden="true">#</a> 6 递归删除</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
source_folder_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输⼊想要操作的⽂件夹：&quot;</span><span class="token punctuation">)</span>
file_extension <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输⼊想要删除⽂件后缀(格式为xlsx等)&quot;</span><span class="token punctuation">)</span>
del_files <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> root<span class="token punctuation">,</span> folders<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>source_folder_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">for</span> cur_file <span class="token keyword">in</span> files<span class="token punctuation">:</span>
<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>cur_file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> file_extension<span class="token punctuation">:</span>
del_files<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> cur_file<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#  删除这些⽂件</span>
<span class="token keyword">if</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;你确定要删除吗？(y/n)&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">:</span>
<span class="token keyword">for</span> cp_file <span class="token keyword">in</span> del_files<span class="token punctuation">:</span>
os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>cp_file<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Done&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-整理为模块" tabindex="-1"><a class="header-anchor" href="#_7-整理为模块" aria-hidden="true">#</a> 7 整理为模块</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">import</span> shutil
<span class="token keyword">def</span> <span class="token function">copy_files</span><span class="token punctuation">(</span>source_folder_name<span class="token punctuation">,</span> target_folder<span class="token punctuation">,</span> file_extension<span class="token operator">=</span><span class="token string">&#39;xlsx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
批量复制指定后缀名的⽂件
:param source_folder_name:
:param target_folder:
:param file_extension:
:return:
&quot;&quot;&quot;</span>
cp_files <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> root<span class="token punctuation">,</span> folders<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>source_folder_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">for</span> cur_file <span class="token keyword">in</span> files<span class="token punctuation">:</span>
<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>cur_file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> file_extension<span class="token punctuation">:</span>
cp_files<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> cur_file<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#  复制这些⽂件</span>
<span class="token keyword">for</span> cp_file <span class="token keyword">in</span> cp_files<span class="token punctuation">:</span>
shutil<span class="token punctuation">.</span>copy<span class="token punctuation">(</span>cp_file<span class="token punctuation">,</span> target_folder<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Done&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">delete_files</span><span class="token punctuation">(</span>source_folder_name<span class="token punctuation">,</span> file_extension<span class="token operator">=</span><span class="token string">&#39;xlsx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
批量删除指定后缀名的⽂件
:param source_folder_name:
:param file_extension:
:return:
&quot;&quot;&quot;</span>
del_files <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> root<span class="token punctuation">,</span> folders<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>source_folder_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">for</span> cur_file <span class="token keyword">in</span> files<span class="token punctuation">:</span>
<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>cur_file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> file_extension<span class="token punctuation">:</span>
del_files<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> cur_file<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#  删除这些⽂件</span>
<span class="token keyword">for</span> cp_file <span class="token keyword">in</span> del_files<span class="token punctuation">:</span>
os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>cp_file<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Done&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">move_files</span><span class="token punctuation">(</span>source_folder_name<span class="token punctuation">,</span> target_folder<span class="token punctuation">,</span> file_extension<span class="token operator">=</span><span class="token string">&#39;xlsx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
批量移动指定后缀名的⽂件
:param source_folder_name:
:param target_folder:
:param file_extension:
:return:
&quot;&quot;&quot;</span>
mv_files <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> root<span class="token punctuation">,</span> folders<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>source_folder_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">for</span> cur_file <span class="token keyword">in</span> files<span class="token punctuation">:</span>
<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>cur_file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> file_extension<span class="token punctuation">:</span>
mv_files<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> cur_file<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#  剪切这些⽂件</span>
<span class="token keyword">for</span> cp_file <span class="token keyword">in</span> mv_files<span class="token punctuation">:</span>
<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>target_folder<span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>cp_file
<span class="token keyword">continue</span>
shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span>cp_file<span class="token punctuation">,</span> target_folder<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Done&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">walk_to_find</span><span class="token punctuation">(</span>find_path<span class="token punctuation">,</span> find_file_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
路径find_path中递归查找⽂件find_file_name
:param find_path:
:param find_file_name:
:return:
&quot;&quot;&quot;</span>
result_path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> root<span class="token punctuation">,</span> dirs<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>find_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">for</span> item <span class="token keyword">in</span> files<span class="token punctuation">:</span>
<span class="token keyword">if</span> item <span class="token operator">==</span> find_file_name<span class="token punctuation">:</span>
file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root<span class="token punctuation">,</span> item<span class="token punctuation">)</span>
result_path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>result_path<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;找到⽂件&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>result_path<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;⽂件未找到&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> result_path
<span class="token keyword">def</span> <span class="token function">find_extension</span><span class="token punctuation">(</span>find_path<span class="token punctuation">,</span> extension_name<span class="token operator">=</span><span class="token string">&#39;xlsx,mp3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
递归查找指定后缀名的⽂件
:param find_path:
:param extension_name:
:return:
&quot;&quot;&quot;</span>
tmp_extensions <span class="token operator">=</span> extension_name<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
extensions <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> item <span class="token keyword">for</span> item <span class="token keyword">in</span> tmp_extensions<span class="token punctuation">]</span>
result_path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> cur_dir<span class="token punctuation">,</span> folders<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>find_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">for</span> item <span class="token keyword">in</span> files<span class="token punctuation">:</span>
extension <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> extension <span class="token keyword">in</span> extensions<span class="token punctuation">:</span>
result_path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>cur_dir<span class="token punctuation">,</span> item<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>result_path<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>result_path<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;未找到&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">stat_file</span><span class="token punctuation">(</span>folder_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token triple-quoted-string string">&quot;&quot;&quot;
统计⽂件个数，⽂件夹个数
:param folder_name:
:return:
&quot;&quot;&quot;</span>
file_count<span class="token punctuation">,</span> folder_count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>
<span class="token keyword">if</span> folder_name<span class="token punctuation">:</span>
<span class="token keyword">for</span> <span class="token builtin">dir</span><span class="token punctuation">,</span> folders<span class="token punctuation">,</span> files <span class="token keyword">in</span> os<span class="token punctuation">.</span>walk<span class="token punctuation">(</span>folder_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
file_count <span class="token operator">+=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span>
folder_count <span class="token operator">+=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>folders<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>f&quot;<span class="token punctuation">{</span>folder_name<span class="token punctuation">}</span>⾥⼀共包括<span class="token punctuation">:</span><span class="token punctuation">{</span>file_count<span class="token punctuation">}</span>个⽂件<span class="token punctuation">,</span> <span class="token punctuation">{</span>folder_count<span class="token punctuation">}</span>个⽂件夹
<span class="token keyword">return</span> file_count<span class="token punctuation">,</span> folder_count
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>openpyxl操作excel⽂件 openpyxl是⽤于读取/写⼊Excel 2010 xlsx⽂件的Python库，也就是说openpyxl这个Python库不 ⽀持xls⽂件的读取和操作。 如果在⼯作中遇到xls⽂件，我们可以转化为xlsx⽂件。 这个库是⽬前读写excel⽂件性能最好的库</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> openpyxl
<span class="token keyword">from</span> excel_office <span class="token keyword">import</span> <span class="token operator">*</span>
excel_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的xlsx&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> excel_file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>excel_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
wb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>excel_path<span class="token punctuation">,</span> excel_file<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>excel_file<span class="token punctuation">}</span></span><span class="token string">⾥有sheet表：&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span>sheetnames
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="excel" tabindex="-1"><a class="header-anchor" href="#excel" aria-hidden="true">#</a> Excel</h1><h2 id="_1-逐行读取excel单元格的值" tabindex="-1"><a class="header-anchor" href="#_1-逐行读取excel单元格的值" aria-hidden="true">#</a> 1 逐⾏读取excel单元格的值</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> openpyxl
<span class="token keyword">from</span> excel_office <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token comment">#  读⽂件、读表</span>
xlsx_file1 <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的xlsx&#39;</span><span class="token punctuation">,</span>
<span class="token comment">#  找到⼯作表</span>
worksheet <span class="token operator">=</span> xlsx_file1<span class="token punctuation">[</span><span class="token string">&#39;1⽉销售订单数据&#39;</span><span class="token punctuation">]</span>
sku_sale_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">#  遍历⾏数据</span>
<span class="token keyword">for</span> row_data <span class="token keyword">in</span> worksheet<span class="token punctuation">.</span>rows<span class="token punctuation">:</span>
sku_name <span class="token operator">=</span> row_data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token comment">#  列计数从零开始</span>
<span class="token comment">#  跳过表头</span>
<span class="token keyword">if</span> sku_name <span class="token operator">==</span> <span class="token string">&quot;商品名&quot;</span><span class="token punctuation">:</span>
<span class="token keyword">continue</span>
sale_n <span class="token operator">=</span> row_data<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value
<span class="token keyword">if</span> sku_name <span class="token keyword">in</span> sku_sale_dict<span class="token punctuation">:</span>
sku_sale_dict<span class="token punctuation">[</span>sku_name<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sale_n<span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
sku_sale_dict<span class="token punctuation">[</span>sku_name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sale_n<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sku_sale_dict<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-读取excel单元格值方法2" tabindex="-1"><a class="header-anchor" href="#_2-读取excel单元格值方法2" aria-hidden="true">#</a> 2. 读取excel单元格值⽅法2</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> openpyxl
<span class="token keyword">from</span> excel_office <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token comment">#  读⽂件、读表</span>
xlsx_file1 <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的xlsx&#39;</span><span class="token punctuation">,</span>
<span class="token comment">#  找到⼯作表</span>
worksheet <span class="token operator">=</span> xlsx_file1<span class="token punctuation">[</span><span class="token string">&#39;1⽉销售订单数据&#39;</span><span class="token punctuation">]</span>
<span class="token number">3</span> 插⼊⾏
<span class="token number">4</span> 插⼊列
sku_sale_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
row_n <span class="token operator">=</span> worksheet<span class="token punctuation">.</span>max_row
<span class="token keyword">for</span> row_i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> row_n<span class="token punctuation">)</span><span class="token punctuation">:</span>
sku_name <span class="token operator">=</span> worksheet<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&#39;C</span><span class="token interpolation"><span class="token punctuation">{</span>row_i<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span>value
sale_n <span class="token operator">=</span> worksheet<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&#39;H</span><span class="token interpolation"><span class="token punctuation">{</span>row_i<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span>value
<span class="token keyword">if</span> sku_name <span class="token keyword">in</span> sku_sale_dict<span class="token punctuation">:</span>
sku_sale_dict<span class="token punctuation">[</span>sku_name<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sale_n<span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
sku_sale_dict<span class="token punctuation">[</span>sku_name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sale_n<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sku_sale_dict<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3插入行" tabindex="-1"><a class="header-anchor" href="#_3插入行" aria-hidden="true">#</a> 3插⼊⾏</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> openpyxl
<span class="token keyword">from</span> excel_office <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> string
<span class="token comment">#  读⽂件、读表</span>
xlsx_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的xlsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;销售订单1.0.xlsx&#39;</span><span class="token punctuation">)</span>
xlsx_file1 <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span>xlsx_path<span class="token punctuation">)</span>
<span class="token comment">#  找到⼯作表</span>
worksheet <span class="token operator">=</span> xlsx_file1<span class="token punctuation">[</span><span class="token string">&#39;1⽉销售订单数据&#39;</span><span class="token punctuation">]</span>
<span class="token comment">#  任务：把下⾯这⾏数据插⼊到第 10 ⾏</span>
insert_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;99232019010124&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;700014&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;有点酸可乐&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;君再来牌&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;饮料&#39;</span><span class="token punctuation">,</span> &#39;<span class="token number">550</span>
inserted_at <span class="token operator">=</span> <span class="token number">10</span>
<span class="token comment">#  求解代码</span>
<span class="token comment">#  第⼀步：插⼊⼀⾏</span>
worksheet<span class="token punctuation">.</span>insert_rows<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment">#  第⼆步：为此⾏插⼊单元格数据</span>
columns_n <span class="token operator">=</span> worksheet<span class="token punctuation">.</span>max_column <span class="token comment"># max_row</span>
columns <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_uppercase<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span>columns_n<span class="token punctuation">]</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span> col_i <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>columns<span class="token punctuation">)</span><span class="token punctuation">:</span>
worksheet<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>col_i<span class="token punctuation">}</span></span><span class="token string">10&#39;</span></span><span class="token punctuation">]</span> <span class="token operator">=</span> insert_data<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
<span class="token comment">#  第三步：保存数据</span>
xlsx_file1<span class="token punctuation">.</span>save<span class="token punctuation">(</span>xlsx_path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-插入列" tabindex="-1"><a class="header-anchor" href="#_4-插入列" aria-hidden="true">#</a> 4.插⼊列</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> openpyxl
<span class="token keyword">from</span> excel_office <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> random
<span class="token comment">#  读⽂件、读表</span>
xlsx_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的xlsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;销售订单1.0.xlsx&#39;</span><span class="token punctuation">)</span>
xlsx_file1 <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span>xlsx_path<span class="token punctuation">)</span>
<span class="token comment">#  找到⼯作表</span>
worksheet <span class="token operator">=</span> xlsx_file1<span class="token punctuation">[</span><span class="token string">&#39;1⽉销售订单数据&#39;</span><span class="token punctuation">]</span>
<span class="token comment">#  任务：在倒数第⼆列前插⼊ 3 列</span>
<span class="token comment">#  并起名为 :  新增列 1 ，新增列 2 ，新增列 3</span>
<span class="token comment">#  最后随机填充 [1,100] 的随机整数</span>
<span class="token comment">#  第⼀步：插⼊倒数第⼆列</span>
col_index <span class="token operator">=</span> worksheet<span class="token punctuation">.</span>max_column <span class="token operator">-</span> <span class="token number">1</span>
worksheet<span class="token punctuation">.</span>insert_cols<span class="token punctuation">(</span>col_index<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># insert_cols ⽅法索引是从 1 开始的</span>
<span class="token comment">#  第⼆步：补充新增的 3 个列头</span>
<span class="token number">5</span> 删除⾏和列
<span class="token number">6</span> ⼩项⽬：excel批量合并和统计
<span class="token keyword">for</span> col_i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
worksheet<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>col_index <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">+</span> col_i<span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;新增列</span><span class="token interpolation"><span class="token punctuation">{</span>col_i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span>
<span class="token comment">#  第三步：填充数据</span>
<span class="token keyword">for</span> row_i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> worksheet<span class="token punctuation">.</span>max_row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">for</span> col_i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
worksheet<span class="token punctuation">[</span>row_i<span class="token punctuation">]</span><span class="token punctuation">[</span>col_index <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">+</span> col_i<span class="token punctuation">]</span><span class="token punctuation">.</span>value <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span>
<span class="token comment">#  第四步：保存数据</span>
xlsx_file1<span class="token punctuation">.</span>save<span class="token punctuation">(</span>xlsx_path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-删除行和列" tabindex="-1"><a class="header-anchor" href="#_5-删除行和列" aria-hidden="true">#</a> 5 删除⾏和列</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#  任务：</span>
<span class="token comment">#  从第⼆⾏开始往后删除 excel 10 ⾏数据</span>
<span class="token comment">#  然后，删除 excel ⽂件的前 3 列</span>
<span class="token keyword">import</span> openpyxl
<span class="token keyword">from</span> excel_office <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token comment">#  读⽂件、读表</span>
xlsx_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的xlsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;销售订单1.0.xlsx&#39;</span><span class="token punctuation">)</span>
xlsx_file1 <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span>xlsx_path<span class="token punctuation">)</span>
<span class="token comment">#  找到⼯作表</span>
worksheet <span class="token operator">=</span> xlsx_file1<span class="token punctuation">[</span><span class="token string">&#39;1⽉销售订单数据&#39;</span><span class="token punctuation">]</span>
<span class="token comment">#  第⼀步：使⽤ delete_rows</span>
worksheet<span class="token punctuation">.</span>delete_rows<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token comment">#  第⼆步：删除前 3 列</span>
worksheet<span class="token punctuation">.</span>delete_cols<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">#  第三步：保存数据</span>
xlsx_file1<span class="token punctuation">.</span>save<span class="token punctuation">(</span>xlsx_path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-小项目-excel批量合并和统计" tabindex="-1"><a class="header-anchor" href="#_6-小项目-excel批量合并和统计" aria-hidden="true">#</a> 6 ⼩项⽬：excel批量合并和统计</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#  ⼩项⽬实战</span>
<span class="token comment">#  合并 我的 xlsx  ⽂件夹下，除《销售订单 1.0.xlsx 》⽂件外的其余 11 个 xlsx 表格</span>
<span class="token comment">#  合并规则：只合并第⼆个 sheet 表，</span>
<span class="token comment">#  合并后写⼊到⽂件：销售订单全部合并结果 .xlsx 第⼀个 sheet 表</span>
<span class="token comment">#  然后汇总出⼀个 sheet 表格，写⼊到第⼆个 sheet 表</span>
<span class="token keyword">import</span> math
<span class="token keyword">import</span> openpyxl
<span class="token keyword">from</span> excel_office <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">import</span> os
dir_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的xlsx&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  第⼀步：创建合并结果⽂件：销售订单全部合并结果 .xlsx</span>
<span class="token comment">#  包括创建 2 个 sheet 表</span>
save_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&quot;excel_office&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;销售订单全部合并结果.xlsx&quot;</span><span class="token punctuation">)</span>
result_wb <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>
result_ws <span class="token operator">=</span> result_wb<span class="token punctuation">.</span>active
result_ws<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&quot;汇总sheet&quot;</span>
summary_ws <span class="token operator">=</span> result_wb<span class="token punctuation">.</span>create_sheet<span class="token punctuation">(</span><span class="token string">&quot;统计sheet&quot;</span><span class="token punctuation">)</span>
result_wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span>save_path<span class="token punctuation">)</span>
<span class="token comment">#  第⼆步：批量合并 dir_path ⽬录下的所有 excel ⽂件</span>
<span class="token number">7</span> 介绍⾃动操作word包及安装
什么是python<span class="token operator">-</span>docx？
python<span class="token operator">-</span>docx是⽤于创建和更新Microsoft Word（<span class="token punctuation">.</span>docx）⽂件的Python库。
⽇常需要经常处理Word⽂档，这个包和pandas包结合使⽤，可以在word插⼊excel表格，能节省
我们很多复制、粘贴、调整表格样式的时间
真的很⽅便！
merge_row_index <span class="token operator">=</span> <span class="token number">0</span>
has_header <span class="token operator">=</span> <span class="token boolean">False</span>
<span class="token keyword">for</span> xls_file <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>dir_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">if</span> xls_file <span class="token operator">==</span> <span class="token string">&#39;销售订单1.0.xlsx&#39;</span> <span class="token keyword">or</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>xls_file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> &#39;<span class="token punctuation">.</span>xls
<span class="token keyword">continue</span>
xls_sheets <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>load_workbook<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>dir_path<span class="token punctuation">,</span> xls_file<span class="token punctuation">)</span><span class="token punctuation">)</span>
sale_sheet <span class="token operator">=</span> xls_sheets<span class="token punctuation">.</span>worksheets<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
mr <span class="token operator">=</span> sale_sheet<span class="token punctuation">.</span>max_row
mc <span class="token operator">=</span> sale_sheet<span class="token punctuation">.</span>max_column
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> mr <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">if</span> has_header <span class="token keyword">and</span> i <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token comment">#  合并多个 excel 只取第⼀个 excel 列头</span>
<span class="token keyword">continue</span>
merge_row_index <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> mc <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
result_ws<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>merge_row_index<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> sale_sheet<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">.</span>v
has_header <span class="token operator">=</span> <span class="token boolean">True</span>
<span class="token comment">#  第三步：分析 汇总 sheet  ，统计出商品和销量的字典</span>
sku_sale_dict <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
row_n <span class="token operator">=</span> result_ws<span class="token punctuation">.</span>max_row
<span class="token keyword">for</span> row_i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> row_n<span class="token punctuation">)</span><span class="token punctuation">:</span>
sku_name <span class="token operator">=</span> result_ws<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&#39;C</span><span class="token interpolation"><span class="token punctuation">{</span>row_i<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span>value
sale_n <span class="token operator">=</span> result_ws<span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f&#39;H</span><span class="token interpolation"><span class="token punctuation">{</span>row_i<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span>value
<span class="token keyword">if</span> math<span class="token punctuation">.</span>isnan<span class="token punctuation">(</span>sale_n<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">continue</span>
<span class="token keyword">if</span> sku_name <span class="token keyword">in</span> sku_sale_dict<span class="token punctuation">:</span>
sku_sale_dict<span class="token punctuation">[</span>sku_name<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sale_n<span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
sku_sale_dict<span class="token punctuation">[</span>sku_name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sale_n<span class="token punctuation">)</span>
<span class="token comment">#  第四步：写⼊ 统计 sheet  中</span>
<span class="token comment">#  列头</span>
summary_ws<span class="token punctuation">.</span>cell<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;商品名&quot;</span>
summary_ws<span class="token punctuation">.</span>cell<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;总销量&quot;</span>
stat_row_n <span class="token operator">=</span> <span class="token number">2</span>
<span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> sku_sale_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
summary_ws<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>stat_row_n<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> key
summary_ws<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>stat_row_n<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value
stat_row_n <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token comment">#  第五步：保存</span>
result_wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span>save_path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="word" tabindex="-1"><a class="header-anchor" href="#word" aria-hidden="true">#</a> word</h1><h2 id="_7-介绍自动操作word包及安装" tabindex="-1"><a class="header-anchor" href="#_7-介绍自动操作word包及安装" aria-hidden="true">#</a> 7 介绍⾃动操作word包及安装</h2><p>python-docx是⽤于创建和更新Microsoft Word（.docx）⽂件的Python库。 ⽇常需要经常处理Word⽂档，这个包和pandas包结合使⽤，可以在word插⼊excel表格，能节省 我们很多复制、粘贴、调整表格样式的时间 真的很⽅便！</p><h2 id="_8使用python-docx自动生成第一个word文档" tabindex="-1"><a class="header-anchor" href="#_8使用python-docx自动生成第一个word文档" aria-hidden="true">#</a> 8使⽤python-docx⾃动⽣成第⼀个word⽂档</h2><p>导⼊python-docx库 新建wrod⽂档 新建⼀级标题 在指定位置添加图⽚ 添加⾃然段落 ⼆级、三级标题 在指定位置添加表格</p><h2 id="_9-生成第一个word文档" tabindex="-1"><a class="header-anchor" href="#_9-生成第一个word文档" aria-hidden="true">#</a> 9 ⽣成第⼀个word⽂档</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> docx <span class="token keyword">import</span> Document
<span class="token keyword">from</span> docx<span class="token punctuation">.</span>shared <span class="token keyword">import</span> Inches
<span class="token comment">#  第⼀步：⽣成 word ⽂档</span>
document <span class="token operator">=</span> Document<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#  第⼆步：添加⽂档标题</span>
document<span class="token punctuation">.</span>add_heading<span class="token punctuation">(</span><span class="token string">&#39;从零学Python&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">#  对应 html 的 head1 、 2 、 3 等标题</span>
<span class="token comment">#  添加 1 个图⽚</span>
document<span class="token punctuation">.</span>add_picture<span class="token punctuation">(</span><span class="token string">&#39;ch1-1.png&#39;</span><span class="token punctuation">,</span> width<span class="token operator">=</span>Inches<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
p <span class="token operator">=</span> document<span class="token punctuation">.</span>add_paragraph<span class="token punctuation">(</span><span class="token string">&#39;⼈⽣苦短，我⽤Python&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  第三步：添加 1 号标题</span>
document<span class="token punctuation">.</span>add_heading<span class="token punctuation">(</span><span class="token string">&#39;Python简介&#39;</span><span class="token punctuation">,</span> level<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token comment">#  添加四段</span>
document<span class="token punctuation">.</span>add_paragraph<span class="token punctuation">(</span><span class="token string">&#39;在1989年圣诞节，Guido(⻳叔)开始编写Python语⾔&#39;</span><span class="token punctuation">)</span>
document<span class="token punctuation">.</span>add_paragraph<span class="token punctuation">(</span>
<span class="token string">&#39;1994年1⽉，Python 1.0正式发布&#39;</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">&#39;List Bullet&#39;</span>
<span class="token punctuation">)</span>
document<span class="token punctuation">.</span>add_paragraph<span class="token punctuation">(</span>
<span class="token string">&#39;2000年10⽉：Python 2.0发布&#39;</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">&#39;List Bullet&#39;</span>
<span class="token punctuation">)</span>
document<span class="token punctuation">.</span>add_paragraph<span class="token punctuation">(</span>
<span class="token string">&#39;2008年12⽉：Python 3.0发布&#39;</span><span class="token punctuation">,</span> style<span class="token operator">=</span><span class="token string">&#39;List Bullet&#39;</span>
<span class="token punctuation">)</span>
<span class="token comment">#  添加 1 个表格</span>
table <span class="token operator">=</span> document<span class="token punctuation">.</span>add_table<span class="token punctuation">(</span>rows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> cols<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
<span class="token comment">#  添加表格头</span>
hdr_cells <span class="token operator">=</span> table<span class="token punctuation">.</span>rows<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cells
hdr_cells<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&#39;编号&#39;</span>
hdr_cells<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&#39;语⾔&#39;</span>
hdr_cells<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&#39;得分&#39;</span>
records <span class="token operator">=</span> <span class="token punctuation">(</span>
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;C++&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;Java&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8.1&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
<span class="token comment">#  添加数据⾏</span>
<span class="token keyword">for</span> <span class="token builtin">id</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> score <span class="token keyword">in</span> records<span class="token punctuation">:</span>
row_cells <span class="token operator">=</span> table<span class="token punctuation">.</span>add_row<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>cells
row_cells<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span>
row_cells<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text <span class="token operator">=</span> name
row_cells<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text <span class="token operator">=</span> score
document<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&#39;Python⾃动⽣成第⼀个⽂档.docx&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-如何理解word中runs对象" tabindex="-1"><a class="header-anchor" href="#_10-如何理解word中runs对象" aria-hidden="true">#</a> 10 如何理解word中runs对象</h2><p>最⾼⼀层是Document对象表示⽂档，每个Document对象包含⼀个Paragraph 对象也就是段落组 成的列表，⽽每个Paragraph对象则包含⼀个Run对象的列表，⾄于Run对象⼤家可以通过下⾯的 段落Paragraph来了解。 Document： ⽂档 Paragraph：段落 Run：⽂字块 我们知道Word⾥的⽂本包含有很多格式，⽐如字体、字号、粗体/斜体、颜⾊等等。⼀个Run对象 是具有相同格式的⽂本，当发⽣变化的时候就需要⼀个新的Run对象，这也就是上图中1个 Paragraph对象有4个Run对象的原因。</p><p>11 切割⾦庸⼩说总结并保存到excel中</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">import</span> docx
<span class="token keyword">import</span> openpyxl
<span class="token keyword">from</span> word_office <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token comment">#  任务：提取 word 中的标记为加粗或下划线的⽂字</span>
<span class="token comment">#  并保存到 excel 表中</span>
<span class="token comment">#  第⼀步：打开 word ⽂档</span>
my_doc <span class="token operator">=</span> docx<span class="token punctuation">.</span>Document<span class="token punctuation">(</span><span class="token string">&#39;⾦庸⼩说总结.docx&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  打开 excel 表格</span>
result_xlsx <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#  取⼯作表单</span>
result_sheet <span class="token operator">=</span> result_xlsx<span class="token punctuation">.</span>active
<span class="token comment">#  遍历⽂档</span>
<span class="token keyword">for</span> paragraph <span class="token keyword">in</span> my_doc<span class="token punctuation">.</span>paragraphs<span class="token punctuation">:</span>
<span class="token keyword">for</span> run <span class="token keyword">in</span> paragraph<span class="token punctuation">.</span>runs<span class="token punctuation">:</span>
<span class="token keyword">if</span> run<span class="token punctuation">.</span>text <span class="token operator">!=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">:</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>run<span class="token punctuation">.</span>font<span class="token punctuation">.</span>color<span class="token punctuation">.</span>rgb<span class="token punctuation">)</span>
result_sheet<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>run<span class="token punctuation">.</span>text<span class="token punctuation">]</span><span class="token punctuation">)</span>
result_xlsx<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&#39;⾦庸⼩说整理为xlsx.xlsx&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_12-提取特定颜色字体的文字" tabindex="-1"><a class="header-anchor" href="#_12-提取特定颜色字体的文字" aria-hidden="true">#</a> 12 提取特定颜⾊字体的⽂字</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">import</span> docx
<span class="token number">13</span> 批量处理<span class="token number">100</span><span class="token operator">+</span>个word⽂档汇总为xlsx⽂档
<span class="token keyword">import</span> openpyxl
<span class="token keyword">from</span> word <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token comment">#  任务：提取 word 中的标记为加粗或下划线的⽂字</span>
<span class="token comment">#  并保存到 excel 表中</span>
word_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的word&#39;</span><span class="token punctuation">)</span>
docx_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>word_path<span class="token punctuation">,</span> <span class="token string">&#39;数学英语词汇.docx&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  第⼀步：打开 word ⽂档</span>
my_doc <span class="token operator">=</span> docx<span class="token punctuation">.</span>Document<span class="token punctuation">(</span>docx_path<span class="token punctuation">)</span>
<span class="token comment">#  打开 excel 表格</span>
result_xlsx <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#  取⼯作表单</span>
result_sheet <span class="token operator">=</span> result_xlsx<span class="token punctuation">.</span>active
result_sheet<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&quot;数学&quot;</span>
<span class="token comment">#  遍历⽂档</span>
<span class="token keyword">for</span> paragraph <span class="token keyword">in</span> my_doc<span class="token punctuation">.</span>paragraphs<span class="token punctuation">:</span>
<span class="token keyword">for</span> run <span class="token keyword">in</span> paragraph<span class="token punctuation">.</span>runs<span class="token punctuation">:</span>
<span class="token keyword">if</span> run<span class="token punctuation">.</span>bold <span class="token keyword">or</span> run<span class="token punctuation">.</span>underline<span class="token punctuation">:</span>
result_sheet<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>run<span class="token punctuation">.</span>text<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">#  保存表格</span>
result_xlsx<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&#39;结果.xlsx&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_13-批量处理100-个word文档汇总为xlsx文档" tabindex="-1"><a class="header-anchor" href="#_13-批量处理100-个word文档汇总为xlsx文档" aria-hidden="true">#</a> 13 批量处理100+个word⽂档汇总为xlsx⽂档</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">import</span> docx
<span class="token keyword">import</span> openpyxl
<span class="token keyword">from</span> word <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token comment">#  任务：批量处理统计表⽂件夹内 word ⽂档</span>
<span class="token comment">#  提取每个 word ⽂档中的表格</span>
<span class="token comment">#  整理汇总到《批量 word 转 excel 汇总结果 .xlsx 》⽂件中</span>
school_list_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;统计表&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  加载 excel 表格</span>
stat_book <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#  加载⼯作表</span>
stat_sheet <span class="token operator">=</span> stat_book<span class="token punctuation">.</span>active
<span class="token comment">#  统计出 excel 表头</span>
stat_sheet<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;学校名称&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;学⽣姓名&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;班级&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;学⽣教师&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">#  读 word ⽂档</span>
<span class="token keyword">for</span> school <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>school_list_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment">#  得到完整路径</span>
schoolPath <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>school_list_path<span class="token punctuation">,</span> school<span class="token punctuation">)</span>
<span class="token comment">#  打开⽂档</span>
school_doc <span class="token operator">=</span> docx<span class="token punctuation">.</span>Document<span class="token punctuation">(</span>docx<span class="token operator">=</span>schoolPath<span class="token punctuation">)</span>
<span class="token comment">#  从⽂档中提取数据信息</span>
row_content <span class="token operator">=</span> <span class="token punctuation">[</span>school_doc<span class="token punctuation">.</span>paragraphs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>runs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">]</span>
<span class="token comment">#  提取表中表格内容</span>
school_table <span class="token operator">=</span> school_doc<span class="token punctuation">.</span>tables<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token number">14</span> python<span class="token operator">-</span>pptx简介及安装
使⽤python操作PPT，需要使⽤的模块就是python<span class="token operator">-</span>pptx
python操作PPT，最好是我们提前设计好⾃⼰的⼀套样式，然后利⽤进⾏python进⾏内容的获取
和填充<span class="token punctuation">(</span>最主要的功能！<span class="token punctuation">)</span>
先了解下PPT基本结构在python分别是什么含义：
Slide：幻灯⽚，就是演示⽂稿中每⼀⻚的⻚⾯。
Shape：⽅框，在每⻚幻灯⽚内插⼊的⽅框，可以是形状，也可以是⽂本框。
Paragraph：段落，通常有序号ᆞ <span class="token number">1.</span> 等。
Run：⽂字块，⼀般为较少字符。
安装
pip install python<span class="token operator">-</span>pptx <span class="token operator">-</span>i https<span class="token punctuation">:</span><span class="token operator">//</span>pypi<span class="token punctuation">.</span>tuna<span class="token punctuation">.</span>tsinghua<span class="token punctuation">.</span>edu<span class="token punctuation">.</span>cn<span class="token operator">/</span>simple
<span class="token number">15</span> 使⽤程序⽣成hello 版ppt
row_start_index<span class="token punctuation">,</span> column_start_index <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span>
<span class="token keyword">for</span> row_index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>row_start_index<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>school_doc<span class="token punctuation">.</span>tables<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment">#  读⼀⾏</span>
<span class="token keyword">for</span> col_index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>column_start_index<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>school_doc<span class="token punctuation">.</span>tables<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>co
<span class="token keyword">if</span> school_table<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row_index<span class="token punctuation">,</span> col_index<span class="token punctuation">)</span><span class="token punctuation">.</span>text <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">:</span>
<span class="token keyword">break</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
row_content<span class="token punctuation">[</span>col_index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> school_table<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row_index<span class="token punctuation">,</span> col_
<span class="token keyword">else</span><span class="token punctuation">:</span>
<span class="token comment"># for 循环完整执⾏后，表明⼀⾏数据都完整了，存⼀⾏</span>
stat_sheet<span class="token punctuation">.</span>append<span class="token punctuation">(</span>iterable<span class="token operator">=</span>row_content<span class="token punctuation">)</span>
<span class="token comment">#  保存表格⽂件</span>
stat_book<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&#39;批量word转excel汇总结果.xlsx&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="ppt" tabindex="-1"><a class="header-anchor" href="#ppt" aria-hidden="true">#</a> ppt</h1><h2 id="_14-python-pptx简介及安装" tabindex="-1"><a class="header-anchor" href="#_14-python-pptx简介及安装" aria-hidden="true">#</a> 14 python-pptx简介及安装</h2>`,49),r={href:"https://pypi.tuna.tsinghua.edu.cn/simple",target:"_blank",rel:"noopener noreferrer"},k=a(`<h2 id="_15-使用程序生成hello-版ppt" tabindex="-1"><a class="header-anchor" href="#_15-使用程序生成hello-版ppt" aria-hidden="true">#</a> 15 使⽤程序⽣成hello 版ppt</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">from</span> pptx <span class="token keyword">import</span> Presentation
<span class="token keyword">from</span> pptx<span class="token punctuation">.</span>util <span class="token keyword">import</span> Inches
<span class="token keyword">from</span> pptx<span class="token punctuation">.</span>enum<span class="token punctuation">.</span>shapes <span class="token keyword">import</span> MSO_SHAPE
<span class="token comment">#  第⼀步：⽣成 ppt ⽂档 prs</span>
prs <span class="token operator">=</span> Presentation<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#  第⼆步：选择幻灯⽚布局（⼀般有 10 种左右）</span>
slide_layout <span class="token operator">=</span> prs<span class="token punctuation">.</span>slide_layouts<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token comment">#  第三步：添加第⼀张幻灯⽚到 prs 中</span>
slide <span class="token operator">=</span> prs<span class="token punctuation">.</span>slides<span class="token punctuation">.</span>add_slide<span class="token punctuation">(</span>slide_layout<span class="token punctuation">)</span>
<span class="token comment">#  添加⼀个⽂本框</span>
left <span class="token operator">=</span> top <span class="token operator">=</span> height <span class="token operator">=</span> Inches<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span>
width <span class="token operator">=</span> Inches<span class="token punctuation">(</span><span class="token number">6.0</span><span class="token punctuation">)</span>
<span class="token comment">#  第四步：添加⼀个 shape( 形状 )</span>
text_shape <span class="token operator">=</span> slide<span class="token punctuation">.</span>shapes<span class="token punctuation">.</span>add_shape<span class="token punctuation">(</span>MSO_SHAPE<span class="token punctuation">.</span>ROUNDED_RECTANGLE<span class="token punctuation">,</span> left<span class="token punctuation">,</span> top<span class="token punctuation">,</span> wi
<span class="token comment">#  设置⽂字： hello world</span>
text_shape<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span>
<span class="token comment">#  添加标题和副标题</span>
title <span class="token operator">=</span> slide<span class="token punctuation">.</span>shapes<span class="token punctuation">.</span>title
<span class="token number">16</span> 读取ppt的⽂本框
<span class="token number">17</span> 读取ppt中表格
subtitle <span class="token operator">=</span> slide<span class="token punctuation">.</span>placeholders<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
title<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&quot;从零学Python&quot;</span>
subtitle<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&quot;程序员zhenguo&quot;</span>
<span class="token comment">#  第五步：保存幻灯⽚</span>
prs<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&#39;hello.pptx&#39;</span><span class="token punctuation">)</span>
								
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_16-读取ppt的文本框" tabindex="-1"><a class="header-anchor" href="#_16-读取ppt的文本框" aria-hidden="true">#</a> 16.读取ppt的⽂本框</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os<span class="token punctuation">.</span>path
<span class="token keyword">from</span> ppt <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> pptx <span class="token keyword">import</span> Presentation
ppt_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的ppt&#39;</span><span class="token punctuation">)</span>
ppt_file <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>ppt_path<span class="token punctuation">,</span> <span class="token string">&#39;从零学Python.pptx&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  实例化⼀个 ppt 对象</span>
ppt <span class="token operator">=</span> Presentation<span class="token punctuation">(</span>ppt_file<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">read_shape</span><span class="token punctuation">(</span>slide<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment">#  遍历某个 slide 的每个⽅框</span>
<span class="token keyword">for</span> shape <span class="token keyword">in</span> slide<span class="token punctuation">.</span>shapes<span class="token punctuation">:</span>
<span class="token comment">#  如果是⽂本框</span>
<span class="token keyword">if</span> shape<span class="token punctuation">.</span>has_text_frame<span class="token punctuation">:</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>&quot;<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>⽂本框<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;段落⻓度：&quot;</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>shape<span class="token punctuation">.</span>text_frame<span class="token punctuation">.</span>paragraphs<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#  遍历某个⽂本框中的每个段落</span>
<span class="token keyword">for</span> paragraph <span class="token keyword">in</span> shape<span class="token punctuation">.</span>text_frame<span class="token punctuation">.</span>paragraphs<span class="token punctuation">:</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>paragraph<span class="token punctuation">.</span>text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;\\r&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\\r\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#  正常显示段内所有内</span>
<span class="token comment">#  遍历 slide</span>
<span class="token keyword">for</span> cur_slide <span class="token keyword">in</span> ppt<span class="token punctuation">.</span>slides<span class="token punctuation">:</span>
read_shape<span class="token punctuation">(</span>cur_slide
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_17-读取ppt中表格" tabindex="-1"><a class="header-anchor" href="#_17-读取ppt中表格" aria-hidden="true">#</a> 17 读取ppt中表格</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os<span class="token punctuation">.</span>path
<span class="token keyword">from</span> ppt <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> pptx <span class="token keyword">import</span> Presentation
ppt_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的ppt&#39;</span><span class="token punctuation">)</span>
ppt_file <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>ppt_path<span class="token punctuation">,</span> <span class="token string">&#39;从零学Python.pptx&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  实例化⼀个 ppt 对象</span>
ppt <span class="token operator">=</span> Presentation<span class="token punctuation">(</span>ppt_file<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">read_shape</span><span class="token punctuation">(</span>slide<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment">#  遍历某个 slide 的每个⽅框</span>
<span class="token keyword">for</span> shape <span class="token keyword">in</span> slide<span class="token punctuation">.</span>shapes<span class="token punctuation">:</span>
<span class="token comment">#  如果是表格</span>
<span class="token keyword">if</span> shape<span class="token punctuation">.</span>has_table<span class="token punctuation">:</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>&quot;<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>表格<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
one_table_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> row <span class="token keyword">in</span> shape<span class="token punctuation">.</span>table<span class="token punctuation">.</span>rows<span class="token punctuation">:</span> <span class="token comment">#  读每⾏</span>
row_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token number">18</span> 读取ppt中的图⽚
<span class="token number">19</span> 实战⼩项⽬：批量转化word表格为ppt
<span class="token comment"># 任务：批量处理word⽂档中所有表格，</span>
<span class="token comment"># 每个表格对应⼀张ppt⻚</span>
<span class="token comment"># 保存合并后的⼀个ppt⽂件：合并表格.pptx</span>
<span class="token number">20</span> pdfplumber包介绍及安装
Pdfplumber是⼀个可以处理pdf格式信息的库。
可以查找关于每个⽂本字符和⾏的详细信息，也可以对表格进⾏提取。
Pdfplumber可以⽅便的获取其⽂本内容、标题、表格等，⽤起来很⽅便。
<span class="token keyword">for</span> cell <span class="token keyword">in</span> row<span class="token punctuation">.</span>cells<span class="token punctuation">:</span> <span class="token comment">#  读⼀⾏中的所有单元格</span>
cell<span class="token punctuation">.</span>text <span class="token operator">=</span> cell<span class="token punctuation">.</span>text <span class="token keyword">if</span> cell<span class="token punctuation">.</span>text <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token keyword">else</span> <span class="token string">&quot;未填写&quot;</span>
row_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>cell<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
one_table_data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>row_data<span class="token punctuation">)</span> <span class="token comment">#  把每⼀⾏存⼊表</span>
<span class="token comment">#  ⽤⼆维列表输出表格⾏和列的数据</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>one_table_data<span class="token punctuation">)</span>
<span class="token comment">#  遍历 slide</span>
<span class="token keyword">for</span> cur_slide <span class="token keyword">in</span> ppt<span class="token punctuation">.</span>slides<span class="token punctuation">:</span>
read_shape<span class="token punctuation">(</span>cur_slide<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_18-读取ppt中的图片" tabindex="-1"><a class="header-anchor" href="#_18-读取ppt中的图片" aria-hidden="true">#</a> 18 读取ppt中的图⽚</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">from</span> ppt <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> pptx <span class="token keyword">import</span> Presentation
<span class="token keyword">from</span> pptx<span class="token punctuation">.</span>shapes<span class="token punctuation">.</span>picture <span class="token keyword">import</span> Picture
ppt_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的ppt&#39;</span><span class="token punctuation">)</span>
ppt_file <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>ppt_path<span class="token punctuation">,</span> <span class="token string">&#39;从零学Python.pptx&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  实例化⼀个 ppt 对象</span>
ppt <span class="token operator">=</span> Presentation<span class="token punctuation">(</span>ppt_file<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">read_shape</span><span class="token punctuation">(</span>slide<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment">#  遍历某个 slide 的每个⽅框</span>
<span class="token keyword">for</span> shape <span class="token keyword">in</span> slide<span class="token punctuation">.</span>shapes<span class="token punctuation">:</span>
<span class="token comment">#  如果是表格</span>
<span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>shape<span class="token punctuation">,</span> Picture<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>&quot;<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span>图⽚<span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span>
index <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>index<span class="token punctuation">}</span></span><span class="token string">.png&#39;</span></span><span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>shape<span class="token punctuation">.</span>image<span class="token punctuation">.</span>blob<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;图⽚⼤⼩：</span><span class="token interpolation"><span class="token punctuation">{</span>shape<span class="token punctuation">.</span>image<span class="token punctuation">.</span>size<span class="token punctuation">}</span></span><span class="token string">，保存成功&quot;</span></span><span class="token punctuation">)</span>
index <span class="token operator">+=</span> <span class="token number">1</span>
<span class="token comment">#  遍历 slide</span>
<span class="token keyword">for</span> cur_slide <span class="token keyword">in</span> ppt<span class="token punctuation">.</span>slides<span class="token punctuation">:</span>
read_shape<span class="token punctuation">(</span>cur_slide<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="pdf" tabindex="-1"><a class="header-anchor" href="#pdf" aria-hidden="true">#</a> pdf</h1><h2 id="_19批量读取pdf" tabindex="-1"><a class="header-anchor" href="#_19批量读取pdf" aria-hidden="true">#</a> 19批量读取pdf</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pdfplumber
<span class="token keyword">from</span> pdf <span class="token keyword">import</span> <span class="token operator">*</span>
pdf_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的pdf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pdf_folder&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  遍历 pdf ⽂件</span>
pdf_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>pdf_path<span class="token punctuation">)</span>
<span class="token comment">#  逐个遍历 pdf ⽂档</span>
<span class="token keyword">for</span> pdf_file <span class="token keyword">in</span> pdf_list<span class="token punctuation">:</span>
<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>pdf_file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">&quot;.pdf&quot;</span><span class="token punctuation">:</span>
<span class="token keyword">continue</span>
<span class="token comment">#  组装完整路径</span>
pdf_file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>pdf_path<span class="token punctuation">,</span> pdf_file<span class="token punctuation">)</span>
<span class="token comment">#  读取 pdf ⽂件</span>
pdf <span class="token operator">=</span> pdfplumber<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>pdf_file_path<span class="token punctuation">)</span> <span class="token comment">#  关键代码 1</span>
<span class="token comment">#  逐⻚遍历</span>
<span class="token keyword">for</span> page <span class="token keyword">in</span> pdf<span class="token punctuation">.</span>pages<span class="token punctuation">:</span> <span class="token comment">#  关键代码 2</span>
text_data <span class="token operator">=</span> page<span class="token punctuation">.</span>extract_text<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#  关键代码 3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>text_data<span class="token punctuation">)</span>
<span class="token comment">#  完成⼀⻚的添加</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>pdf_file<span class="token punctuation">}</span></span><span class="token string">提取完成&quot;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_20批量提取pdf表格并保存为excel" tabindex="-1"><a class="header-anchor" href="#_20批量提取pdf表格并保存为excel" aria-hidden="true">#</a> 20批量提取pdf表格并保存为excel</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> docx
<span class="token keyword">import</span> pdfplumber
<span class="token keyword">import</span> openpyxl
<span class="token keyword">from</span> pdf <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token comment">#  配置参数</span>
<span class="token comment"># pdf 名单</span>
pdf_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的pdf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;名单.pdf&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  优秀教师名单</span>
excel_file <span class="token operator">=</span> <span class="token string">&quot;优秀教师.xlsx&quot;</span>
<span class="token comment">#  名单</span>
<span class="token comment">#  添加到 word ⽂档中</span>
my_workbook <span class="token operator">=</span> openpyxl<span class="token punctuation">.</span>Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>
my_sheet <span class="token operator">=</span> my_workbook<span class="token punctuation">.</span>active
<span class="token comment">#  打开 pdf ⽂档</span>
pdf_content <span class="token operator">=</span> pdfplumber<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>pdf_path<span class="token punctuation">)</span>
<span class="token number">23</span> 提取pdf表格并保存为ppt
<span class="token comment">#  逐⻚遍历⽂档⻚⾯，取表格</span>
<span class="token comment">#  第⼀⻚有表头，特殊情况特殊处理</span>
<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pdf_content<span class="token punctuation">.</span>pages<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
all_tables <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> page_content <span class="token keyword">in</span> pdf_content<span class="token punctuation">.</span>pages<span class="token punctuation">:</span>
<span class="token comment">#  取表</span>
table <span class="token operator">=</span> page_content<span class="token punctuation">.</span>extract_tables<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
all_tables<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>table<span class="token punctuation">)</span>
<span class="token comment">#  写⼊到 excel 表中，⾸先创建出空⾏</span>
my_sheet<span class="token punctuation">.</span>insert_rows<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>all_tables<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">#  逐⾏逐列写⼊到 excel 表格中</span>
<span class="token keyword">for</span> row_i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>all_tables<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">for</span> cell_i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>all_tables<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
my_sheet<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row_i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> cell_i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value <span class="token operator">=</span> all_tables<span class="token punctuation">[</span>row_i<span class="token punctuation">]</span><span class="token punctuation">[</span>cel
<span class="token comment">#  保存</span>
my_workbook<span class="token punctuation">.</span>save<span class="token punctuation">(</span>excel_file<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_21提取pdf表格并保存为ppt" tabindex="-1"><a class="header-anchor" href="#_21提取pdf表格并保存为ppt" aria-hidden="true">#</a> 21提取pdf表格并保存为ppt</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> docx
<span class="token keyword">import</span> pdfplumber
<span class="token keyword">import</span> pptx
<span class="token keyword">from</span> pptx <span class="token keyword">import</span> Presentation
<span class="token keyword">from</span> pptx<span class="token punctuation">.</span>util <span class="token keyword">import</span> Inches
<span class="token keyword">from</span> pdf <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token comment">#  配置参数</span>
<span class="token comment"># pdf 名单</span>
pdf_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;我的pdf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;名单.pdf&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  优秀教师名单</span>
ppt_file <span class="token operator">=</span> <span class="token string">&quot;优秀教师.pptx&quot;</span>
<span class="token comment">#  名单</span>
name_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token comment">#  添加到 ppt ⽂档中</span>
prs <span class="token operator">=</span> Presentation<span class="token punctuation">(</span><span class="token punctuation">)</span>
slide_layout <span class="token operator">=</span> prs<span class="token punctuation">.</span>slide_layouts<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>
<span class="token comment">#  打开 pdf ⽂档</span>
pdf_content <span class="token operator">=</span> pdfplumber<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>pdf_path<span class="token punctuation">)</span>
<span class="token comment">#  逐⻚遍历⽂档⻚⾯，取表格</span>
<span class="token comment">#  第⼀⻚有表头，特殊情况特殊处理</span>
<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pdf_content<span class="token punctuation">.</span>pages<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
all_tables <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
headers <span class="token operator">=</span> pdf_content<span class="token punctuation">.</span>pages<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>extract_tables<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
rows_page <span class="token operator">=</span> <span class="token number">8</span>
<span class="token keyword">for</span> page_content <span class="token keyword">in</span> pdf_content<span class="token punctuation">.</span>pages<span class="token punctuation">:</span>
<span class="token comment">#  取表</span>
cur_table <span class="token operator">=</span> page_content<span class="token punctuation">.</span>extract_tables<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
all_tables<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>cur_table<span class="token punctuation">)</span>
<span class="token comment">#  每 8 ⾏保存⼀⻚ PPT</span>
all_tables <span class="token operator">=</span> all_tables<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token comment"># all_tables[0] 是列头</span>
<span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>all_tables<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">if</span> row <span class="token operator">%</span> rows_page <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
<span class="token comment">#  实例化 table  对象</span>
slide <span class="token operator">=</span> prs<span class="token punctuation">.</span>slides<span class="token punctuation">.</span>add_slide<span class="token punctuation">(</span>slide_layout<span class="token punctuation">)</span>
left <span class="token operator">=</span> top <span class="token operator">=</span> Inches<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">#  表格起始位置</span>
<span class="token number">24</span> 批量合并pdf⽂档并保存为word
width <span class="token operator">=</span> Inches<span class="token punctuation">(</span><span class="token number">6.0</span><span class="token punctuation">)</span> <span class="token comment">#  宽</span>
height <span class="token operator">=</span> Inches<span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">)</span> <span class="token comment">#  ⾼</span>
table_shape <span class="token operator">=</span> slide<span class="token punctuation">.</span>shapes<span class="token punctuation">.</span>add_table<span class="token punctuation">(</span>rows_page <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>cur_table
<span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>cur_table<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
table_shape<span class="token punctuation">.</span>table<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row <span class="token operator">%</span> rows_page<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">.</span>text <span class="token operator">=</span> headers<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
<span class="token keyword">for</span> col <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>all_tables<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment">#  单元格处理</span>
table_shape<span class="token punctuation">.</span>table<span class="token punctuation">.</span>cell<span class="token punctuation">(</span>row <span class="token operator">%</span> rows_page <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> col<span class="token punctuation">)</span><span class="token punctuation">.</span>text <span class="token operator">=</span> all_tables
<span class="token comment">#  保存</span>
prs<span class="token punctuation">.</span>save<span class="token punctuation">(</span>ppt_file<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_22-批量合并pdf文档并保存为word" tabindex="-1"><a class="header-anchor" href="#_22-批量合并pdf文档并保存为word" aria-hidden="true">#</a> 22 批量合并pdf⽂档并保存为word</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> docx
<span class="token keyword">import</span> pdfplumber
<span class="token keyword">from</span> pdf <span class="token keyword">import</span> <span class="token operator">*</span>
pdf_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>root_dir<span class="token punctuation">,</span> <span class="token string">&#39;res&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pdf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pdf_folder&#39;</span><span class="token punctuation">)</span>
<span class="token comment">#  遍历 pdf ⽂件</span>
pdf_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>pdf_path<span class="token punctuation">)</span>
<span class="token comment">#  新建存储⽤的 Word ⽂档</span>
new_doc <span class="token operator">=</span> docx<span class="token punctuation">.</span>Document<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#  逐个遍历 pdf ⽂档</span>
<span class="token keyword">for</span> pdf_file <span class="token keyword">in</span> pdf_list<span class="token punctuation">:</span>
<span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span>pdf_file<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">&quot;.pdf&quot;</span><span class="token punctuation">:</span>
<span class="token keyword">continue</span>
<span class="token comment">#  组装完整路径</span>
pdf_file_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>pdf_path<span class="token punctuation">,</span> pdf_file<span class="token punctuation">)</span>
<span class="token comment">#  读取 pdf ⽂件</span>
pdf <span class="token operator">=</span> pdfplumber<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>pdf_file_path<span class="token punctuation">)</span> <span class="token comment">#  关键代码 1</span>
<span class="token comment">#  逐⻚遍历</span>
<span class="token keyword">for</span> page <span class="token keyword">in</span> pdf<span class="token punctuation">.</span>pages<span class="token punctuation">:</span> <span class="token comment">#  关键代码 2</span>
text_data <span class="token operator">=</span> page<span class="token punctuation">.</span>extract_text<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#  关键代码 3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>text_data<span class="token punctuation">)</span>
new_doc<span class="token punctuation">.</span>add_paragraph<span class="token punctuation">(</span>text_data<span class="token punctuation">)</span>
<span class="token comment">#  添加分⻚</span>
new_doc<span class="token punctuation">.</span>add_page_break<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">#  完成⼀⻚的添加</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>pdf_file<span class="token punctuation">}</span></span><span class="token string">提取完成&quot;</span></span><span class="token punctuation">)</span>
new_doc<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">&quot;合并多个pdf为1个word.docx&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function d(v,m){const p=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("使⽤python操作PPT，需要使⽤的模块就是python-pptx python操作PPT，最好是我们提前设计好⾃⼰的⼀套样式，然后利⽤进⾏python进⾏内容的获取 和填充(最主要的功能！) 先了解下PPT基本结构在python分别是什么含义： Slide：幻灯⽚，就是演示⽂稿中每⼀⻚的⻚⾯。 Shape：⽅框，在每⻚幻灯⽚内插⼊的⽅框，可以是形状，也可以是⽂本框。 Paragraph：段落，通常有序号ᆞ 1. 等。 Run：⽂字块，⼀般为较少字符。 安装 pip install python-pptx -i "),n("a",r,[s("https://pypi.tuna.tsinghua.edu.cn/simple"),l(p)])]),k])}const h=t(i,[["render",d],["__file","auto.html.vue"]]);export{h as default};
