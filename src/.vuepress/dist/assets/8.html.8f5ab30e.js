const t=JSON.parse('{"key":"v-6f12beb0","path":"/projects/zatan/9/8.html","title":"Java命名规范--养成良好代码规范","lang":"zh-CN","frontmatter":{"title":"Java命名规范--养成良好代码规范","icon":"code","category":["技术杂谈"],"tag":["技术杂谈"],"sticky":false,"star":true,"article":true,"timeline":true,"description":"日常编码中，代码的命名是个大的学问。能快速的看懂开源软件的代码结构和意图，也是一项必备的能力。那它们有什么规律呢？ Java项目的代码结构，能够体现它的设计理念。Java采用长命名的方式来规范类的命名，能够自己表达它的主要意图。配合高级的IDE，可以减少编码人员的记忆负担，靠模糊的匹配就能找到自己所需要的资源。 为了让大家更好的理解命名的套路，我借鉴了...","head":[["meta",{"property":"og:url","content":"https://mydocs.guoyaxue.top/projects/zatan/9/8.html"}],["meta",{"property":"og:site_name","content":"小uの学习笔记"}],["meta",{"property":"og:title","content":"Java命名规范--养成良好代码规范"}],["meta",{"property":"og:description","content":"日常编码中，代码的命名是个大的学问。能快速的看懂开源软件的代码结构和意图，也是一项必备的能力。那它们有什么规律呢？ Java项目的代码结构，能够体现它的设计理念。Java采用长命名的方式来规范类的命名，能够自己表达它的主要意图。配合高级的IDE，可以减少编码人员的记忆负担，靠模糊的匹配就能找到自己所需要的资源。 为了让大家更好的理解命名的套路，我借鉴了..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-09-06T05:01:41.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"技术杂谈"}],["meta",{"property":"article:modified_time","content":"2023-09-06T05:01:41.000Z"}]]},"excerpt":"","headers":[],"git":{"createdTime":1693976501000,"updatedTime":1693976501000,"contributors":[{"name":"李子凡","email":"3153566913@qq.com","commits":1}]},"readingTime":{"minutes":14.35,"words":4304},"filePathRelative":"projects/zatan/9/8.md","localizedDate":"2023年9月6日"}');export{t as data};
