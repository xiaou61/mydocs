const e=JSON.parse('{"key":"v-5b76e9ec","path":"/projects/zatan/8/5.html","title":"一文搞懂正则表达式","lang":"zh-CN","frontmatter":{"title":"一文搞懂正则表达式","icon":"code","category":["技术杂谈"],"tag":["技术杂谈"],"sticky":false,"star":true,"article":true,"timeline":true,"description":"什么是正则表达式 ？\\r 正则表达式是一种被用于从文本中检索符合某些特定模式的文本。 正则表达式是从左到右来匹配一个字符串的。“Regular Expression”这个词太长了，我们通常使用它的缩写“regex”或者“regexp”。 正则表达式可以被用来替换字符串中的文本、验证表单、基于模式匹配从一个字符串中提取字符串等等。 想象一下，您正在编写应用...","head":[["meta",{"property":"og:url","content":"https://mydocs.guoyaxue.top/projects/zatan/8/5.html"}],["meta",{"property":"og:site_name","content":"小uの学习笔记"}],["meta",{"property":"og:title","content":"一文搞懂正则表达式"}],["meta",{"property":"og:description","content":"什么是正则表达式 ？\\r 正则表达式是一种被用于从文本中检索符合某些特定模式的文本。 正则表达式是从左到右来匹配一个字符串的。“Regular Expression”这个词太长了，我们通常使用它的缩写“regex”或者“regexp”。 正则表达式可以被用来替换字符串中的文本、验证表单、基于模式匹配从一个字符串中提取字符串等等。 想象一下，您正在编写应用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:updated_time","content":"2023-08-04T12:46:42.000Z"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:tag","content":"技术杂谈"}],["meta",{"property":"article:modified_time","content":"2023-08-04T12:46:42.000Z"}]]},"excerpt":"","headers":[{"level":2,"title":"什么是正则表达式 ？","slug":"什么是正则表达式","link":"#什么是正则表达式","children":[]},{"level":2,"title":"1. 基本匹配","slug":"_1-基本匹配","link":"#_1-基本匹配","children":[]},{"level":2,"title":"2. 元字符","slug":"_2-元字符","link":"#_2-元字符","children":[]},{"level":2,"title":"2.1 英文句号","slug":"_2-1-英文句号","link":"#_2-1-英文句号","children":[]},{"level":2,"title":"2.2 字符集","slug":"_2-2-字符集","link":"#_2-2-字符集","children":[{"level":3,"title":"2.2.1 否定字符集","slug":"_2-2-1-否定字符集","link":"#_2-2-1-否定字符集","children":[]}]},{"level":2,"title":"2.3 重复","slug":"_2-3-重复","link":"#_2-3-重复","children":[{"level":3,"title":"2.3.1 星号","slug":"_2-3-1-星号","link":"#_2-3-1-星号","children":[]},{"level":3,"title":"2.3.2 加号","slug":"_2-3-2-加号","link":"#_2-3-2-加号","children":[]},{"level":3,"title":"2.3.3 问号","slug":"_2-3-3-问号","link":"#_2-3-3-问号","children":[]}]},{"level":2,"title":"2.4 花括号","slug":"_2-4-花括号","link":"#_2-4-花括号","children":[]},{"level":2,"title":"2.5 字符组","slug":"_2-5-字符组","link":"#_2-5-字符组","children":[]},{"level":2,"title":"2.6 分支结构","slug":"_2-6-分支结构","link":"#_2-6-分支结构","children":[]},{"level":2,"title":"2.7 转义特殊字符","slug":"_2-7-转义特殊字符","link":"#_2-7-转义特殊字符","children":[]},{"level":2,"title":"2.8 定位符","slug":"_2-8-定位符","link":"#_2-8-定位符","children":[{"level":3,"title":"2.8.1 插入符号","slug":"_2-8-1-插入符号","link":"#_2-8-1-插入符号","children":[]},{"level":3,"title":"2.8.2 美元符号","slug":"_2-8-2-美元符号","link":"#_2-8-2-美元符号","children":[]}]},{"level":2,"title":"3. 简写字符集","slug":"_3-简写字符集","link":"#_3-简写字符集","children":[]},{"level":2,"title":"4. 断言","slug":"_4-断言","link":"#_4-断言","children":[{"level":3,"title":"4.1 正向先行断言","slug":"_4-1-正向先行断言","link":"#_4-1-正向先行断言","children":[]},{"level":3,"title":"4.2 负向先行断言","slug":"_4-2-负向先行断言","link":"#_4-2-负向先行断言","children":[]},{"level":3,"title":"4.3 正向后行断言","slug":"_4-3-正向后行断言","link":"#_4-3-正向后行断言","children":[]},{"level":3,"title":"4.4 负向后行断言","slug":"_4-4-负向后行断言","link":"#_4-4-负向后行断言","children":[]}]},{"level":2,"title":"5. 标记","slug":"_5-标记","link":"#_5-标记","children":[{"level":3,"title":"5.1 不区分大小写","slug":"_5-1-不区分大小写","link":"#_5-1-不区分大小写","children":[]},{"level":3,"title":"5.2 全局搜索","slug":"_5-2-全局搜索","link":"#_5-2-全局搜索","children":[]},{"level":3,"title":"5.3 多行匹配","slug":"_5-3-多行匹配","link":"#_5-3-多行匹配","children":[]}]},{"level":2,"title":"常用正则表达式","slug":"常用正则表达式","link":"#常用正则表达式","children":[]}],"git":{"createdTime":1691153202000,"updatedTime":1691153202000,"contributors":[{"name":"Lenovo","email":"3153566913@qq.com","commits":1}]},"readingTime":{"minutes":15.93,"words":4779},"filePathRelative":"projects/zatan/8/5.md","localizedDate":"2023年8月4日"}');export{e as data};
